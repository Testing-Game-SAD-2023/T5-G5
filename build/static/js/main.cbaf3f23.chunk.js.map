{"version":3,"sources":["pages/Multi.js","pages/Barra.js","pages/Modalita.js","LoginREC/Login.js","pages/Single.js","LoginREC/Registrazione.js","Attesa/Attesa.js","LoginREC/ResetPass.js","LoginREC/PasswordResetLink.js","Editor/Editor.js","Blocco.js","join.js","App.js","reportWebVitals.js","index.js"],"names":["Home","_useState","useState","_useState2","_slicedToArray","selectedClass","setSelectedClass","_useState3","_useState4","selectedRobot","setSelectedRobot","_useState5","_useState6","searchTerm","setSearchTerm","_useState7","_useState8","inviteText","setInviteText","_useState9","_useState10","showInviteModal","setShowInviteModal","_useState11","_useState12","lastInvites","setLastInvites","uniqueFriends","Array","from","Set","robotListRef","useRef","navigate","useNavigate","_useState13","_useState14","isDropdownOpen","setIsDropdownOpen","_useState15","_useState16","email","setEmail","useEffect","storedEmail","localStorage","getItem","storedid","storedname","fetch","concat","then","response","json","data","console","log","setItem","id_player","name","catch","error","_useState17","_useState18","userData","setUserData","storedId","storedName","id","handleInviteModalClose","ok","Error","classList","icon","faCube","filter","classItem","toLowerCase","includes","robotList","faRobot","React","createElement","Navbar","bg","variant","expand","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Item","style","display","alignItems","marginRight","Dropdown","background","border","padding","color","FontAwesomeIcon","faUser","Menu","Divider","onClick","removeItem","Row","Col","md","Form","Control","type","placeholder","value","onChange","event","target","ListGroup","height","overflowY","marginTop","map","key","action","active","paddingRight","faCheck","marginLeft","Fragment","marginBottom","suggestedFriends","slice","List","sx","width","maxWidth","bgcolor","position","zIndex","overflow","maxHeight","subheader","ListSubheader","friend","ListItem","button","ListItemText","primary","renderSuggestedFriends","text","_toConsumableArray","alert","ref","robot","robotName","data-robot-name","faArrowLeft","Button","size","selectedMode","selectedTurn","selectrec","gameData","classe","modalita","turni","method","headers","Content-Type","body","JSON","stringify","inviteData","game_id","senderid","recipientid","accepted","faArrowRight","Modal","show","onHide","Header","closeButton","Title","Body","Footer","LoadingPage","progress","setProgress","interval","setInterval","clearInterval","ProgressBar","now","label","Modalita","gameMode","setGameMode","numTurns","setNumTurns","showInvites","setShowInvites","gamee","invito","handleGameModeSelect","mode","gameIds","setGameIds","InvitoIds","setInvitoIds","setIsLoading","setError","gamesData","setGamesData","senderIds","setSenderIds","_useState19","_useState20","setSelectedId","_useState21","_useState22","emails","setEmails","_useState23","_useState24","invitoid","invitation","ids","savedGameMode","savedNumTurns","userEmail","handleCloseInvites","Promise","all","gameId","Text","emailsArray","emailObject","isValid","valid","faEnvelope","Group","controlId","as","e","num","span","offset","index","id_partita","inviteId","handleRejectEmail","Login","password","values","setValues","loggedIn","setLoggedIn","handleInput","prev","_objectSpread","_defineProperty","Navigate","to","onSubmit","preventDefault","axios","post","errorMessage","Label","required","Link","Signup","surname","courseofstudy","backgroundColor","borderRadius","playerData","htmlFor","src","alt","CheckAcceptedPage","loading","setLoading","message","setMessage","dotIndex","setDotIndex","setAccepted","shouldBlockNavigation","isConfirmed","setIsConfirmed","handleBeforeUnload","handleUnload","window","addEventListener","removeEventListener","intervalId","dotIntervalId","justifyContent","fontSize","PasswordResetForm","location","useLocation","token","URLSearchParams","search","get","setPassword","setErrorMessage","successMessage","setSuccessMessage","length","requestOptions","status","OtherApp","url","title","allowFullScreen","MyComponent","onpage","setOnpage","invitationId","fontFamily","fontWeight","App","Router","Routes","Route","path","element","Joinare","Testare","Barra","Sign","Single","Prova","Prima","PasswordResetReq","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.cbaf3f23.chunk.js","sourcesContent":["\n\nimport './Modalita.css';\nimport './Ho.css';\nimport './Home.css';\nimport { List, ListItem, ListItemText, ListSubheader } from '@mui/material';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Container, Row, Col, Button, ListGroup, Form, Navbar, Nav, Modal,Dropdown } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRobot, faCube, faCheck,faUser } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons/faArrowLeft';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons/faArrowRight';\nimport axios from 'axios';\nimport './App.css';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction Home() {\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedRobot, setSelectedRobot] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [inviteText, setInviteText] = useState('');\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [lastInvites, setLastInvites] = useState([]);\n  const uniqueFriends = Array.from(new Set(lastInvites));\n  const robotListRef = useRef(null);\n  const navigate = useNavigate();\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n const [email, setEmail] = useState('');\n \n \n useEffect(() => {\n    const storedEmail = localStorage.getItem('email');\n    if (storedEmail) {\n      setEmail(storedEmail);\n  \n     \n    }\n  }, []);\n  const storedEmail = localStorage.getItem('email');\n  const storedid = localStorage.getItem('id');\n  const storedname = localStorage.getItem('name');\n  fetch(`http://localhost:8080/player/email/${storedEmail}`)\n  .then(response => response.json())\n  .then(data => {\n    console.log(data);\n     localStorage.setItem('id', data.id_player);\n    localStorage.setItem('name', data.name);\n  })\n  .catch(error => {\n    console.error('Error retrieving user data:', error);\n  });\n\n \n\n\n  const [userData, setUserData] = useState({});\n\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('email');\n    const storedId = localStorage.getItem('id');\n    const storedName = localStorage.getItem('name');\n    if (storedEmail && !userData.id) {\n      fetch(`http://localhost:8080/player/email/${storedEmail}`)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          localStorage.setItem('id', data.id_player);\n          localStorage.setItem('name', data.name);\n          setUserData(data);\n        })\n        .catch(error => {\n          console.error('Error retrieving user data:', error);\n        });\n    } else {\n      setUserData({\n        id_player: storedId,\n        name: storedName,\n      });\n    }\n  }, []);\n\n\n\n  const handleLogout = () => {\n    localStorage.removeItem('id');\n    localStorage.removeItem('email');\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n\n  const handleToggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n // localStorage.removeItem('id2');\n/*\n  const handleInviteClick = () => {\n    if (inviteText) {\n      setShowInviteModal(true);\n      setLastInvites([...lastInvites, inviteText]);\n      localStorage.setItem('recipientemail', inviteText);\n      fetch(`http://localhost:8080/player/email/${inviteText}`)\n      .then(response => response.json())\n      .then(data => {\n        localStorage.setItem('recipientid', data.id_player);\n      \n      })\n      .catch(error => {\n        console.error('Error retrieving player data:', error);\n      });\n  }\n  setIsDropdownOpen(false);\n};\n*/\n\nconst handleInviteClick = () => {\n  if (inviteText) {\n    fetch(`http://localhost:8080/player/exists/${inviteText}`)\n      .then(response => response.text())\n      .then(data => {\n        if (data === \"Trovato\") {\n          setShowInviteModal(true);\n          setLastInvites([...lastInvites, inviteText]);\n          localStorage.setItem('recipientemail', inviteText);\n          fetch(`http://localhost:8080/player/email/${inviteText}`)\n            .then(response => response.json())\n            .then(data => {\n              localStorage.setItem('recipientid', data.id_player);\n            })\n            .catch(error => {\n              console.error('Error retrieving player data:', error);\n            });\n        } else {\n          alert(\"L'account non esiste.\");\n          localStorage.removeItem('recipientid');\n        }\n      })\n      .catch(error => {\n        console.error('Error checking email existence:', error);\n      });\n  }\n  setIsDropdownOpen(false);\n};\n\nconst memo=localStorage.getItem('recipientid');\n\n  const handleInviteTextChange = (event) => {\n    setInviteText(event.target.value);\n  };\n\n  const handleInviteModalClose = () => {\n    setShowInviteModal(false);\n  };\n\n  const handleClassSelect = (className) => {\n    setSelectedClass(className);\n  };\n\n  const handleRobotSelect = (robotName) => {\n    setSelectedRobot(robotName);\n  };\n/*\n  \n\n  const handleConfirm = () => {\n    const selectedMode = localStorage.getItem('selectedMode');\n    const selectedTurn = localStorage.getItem('selectedTurn');\n  const selectrec=localStorage.getItem('recipientid');\n  const gameData = {\n      classe: selectedClass, // varchar\n      robot: selectedRobot, // varchar\n      modalita: selectedMode, // varchar\n      turni: selectedTurn, // integer\n       id: storedid , \n      name: storedname\n    };\n\n    \n\n    \n    fetch(\"http://localhost:8080/game/add\", {\n      method: \"POST\",\n      headers: { 'Content-Type': \"application/json\" },\n      body: JSON.stringify(gameData)\n    })\n  \n  \n\n \n    \n    .then(response => response.json())\n    .then(data => {\n      console.log( data);\n      localStorage.setItem('gameidentificativo', data);\n\n     \n      \n    })\n    .catch(error => {\n      console.error('Error sending game data:', error);\n     \n    });\n    const selectgid=localStorage.getItem('gameidentificativo');\n    const inviteData = {\n        game_id: selectgid, // varchar\n        sender_id: storedid, // varchar\n        recipientid: selectrec, // varchar\n      \n        accepted: \"false\"\n      };\n      fetch(\"http://localhost:8080/invitations/add\", {\n        method: \"POST\",\n        headers: { 'Content-Type': \"application/json\" },\n        body: JSON.stringify(inviteData)\n      })\n      //.then(response => response.json())\n      .then(data => {\n        console.log(data);\n        navigate('/about');\n      })\n      .catch(error => {\n        console.error('Error sending invitation data:', error);\n      });\n    \n   \n  };\n\n  */\n  const handleConfirm = () => {\n    const selectedMode = localStorage.getItem('selectedMode');\n    const selectedTurn = localStorage.getItem('selectedTurn');\n    const selectrec = localStorage.getItem('recipientid');\n    const gameData = {\n      classe: selectedClass, // varchar\n      robot: selectedRobot, // varchar\n      modalita: selectedMode, // varchar\n      turni: selectedTurn, // integer\n      id: storedid,\n      name: storedname\n    };\n    if (!selectedClass || !selectedRobot || inviteText === '') {\n      alert('Devi selezionare una classe, un robot e inserire un ID amico nel invito.');\n      return;\n    }\n    if (!selectrec) {\n      alert('Devi inserire un ID valido per l\\'amico invitato.');\n      return;\n    }\n\n\n\n    \n    fetch(\"http://localhost:8080/game/add\", {\n      method: \"POST\",\n      headers: { 'Content-Type': \"application/json\" },\n      body: JSON.stringify(gameData)\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        localStorage.setItem('gameidentificativo', data);\n  \n        const selectgid = localStorage.getItem('gameidentificativo');\n        \n  \n  \n    const inviteData = {\n      game_id: selectgid, // varchar\n      senderid: storedid, // varchar\n      recipientid: selectrec, // varchar\n      accepted: \"false\"\n    };\n    return fetch(\"http://localhost:8080/invitations/newadd\", {\n      method: \"POST\",\n      headers: { 'Content-Type': \"application/json\" },\n      body: JSON.stringify(inviteData)\n    });\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log(\"id eccolo\",data.id);\n    localStorage.setItem('invtoId', data.id);\n    navigate('/Casa');\n  })\n  .catch(error => {\n    console.error('Error sending invitation data:', error);\n  });\n\n  };\n  \n  const renderSuggestedFriends = () => {\n    const suggestedFriends = uniqueFriends.slice(0, 4);\n    return (\n      <List\n        sx={{\n          width: '100%',\n          maxWidth: 360,\n          bgcolor: 'background.paper',\n          position: 'absolute',\n          zIndex: 1,\n          overflow: 'auto',\n          maxHeight: 300,\n          marginTop: 2, // Add margin top here\n        }}\n        subheader={<li />}\n      >\n        <li>\n          <ul>\n            <ListSubheader>Amici Suggeriti</ListSubheader>\n            {suggestedFriends.map((friend) => (\n              <ListItem key={friend} button onClick={() => setInviteText(friend)}>\n                <ListItemText primary={friend} />\n              </ListItem>\n            ))}\n          </ul>\n        </li>\n      </List>\n    );\n  };\n  useEffect(() => {\n    const storedId = localStorage.getItem('id');\n    fetch(`http://localhost:8080/invitations/${storedId}/recent`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log(\"we\",data);\n      setLastInvites(data);\n\n    })\n    .catch(error=> {\n      console.error('Error retrieving invitation data:', error);\n    });\n    \n  }, []);\n\n  const classList = [\n    { name: 'Classe 1', icon: faCube },\n    { name: 'Classe 2', icon: faCube },\n    { name: 'Classe 3', icon: faCube }\n  ].filter((classItem) => {\n    return classItem.name.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n/*\n  const [classList, setClassList] = useState([]);\n  integrazione con T1-g20\n    \n  \n  useEffect(() => {\n    fetch('http://localhost:8090/classut_repo/viewAll')\n      .then(response => response.text())\n      .then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n      .then(data => {\n        console.log(\"wewe\",data);\n        const items = data.getElementsByTagName(\"item\");\n        const newClassList = Array.from(items).map(item => {\n          const name = item.getAttribute(\"name\");\n          return { name: name, icon: faCube };\n        }).filter(classItem => {\n          return classItem.name.toLowerCase().includes(searchTerm.toLowerCase());\n        });\n\n        setClassList(newClassList);\n      });\n  }, [searchTerm]);\n  */\n\n  const robotList = [\n    { name: 'Randoop', icon: faRobot },\n    { name: 'Evosuite', icon: faRobot }\n  ];\n\n  if (!email) {\n    return (\n      <div>Accesso proibito. Esegui il login per accedere a questa pagina.</div>\n    );\n  }\n\n  return (\n    <div>\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#\">Scelta configurazione</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ms-auto\">\n <Nav.Item style={{ display: 'flex', alignItems: 'center',marginRight: '-4.5rem' }}>\n <Dropdown>\n              <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\" style={{ background: 'none', border: 'none', padding: '0', color: 'black' }}>\n                <FontAwesomeIcon icon={faUser} style={{ marginRight: '0.3rem', color:'black' }} />\n                {email}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item style={{ color: 'black' }} href=\"#/action-1\">Profilo</Dropdown.Item>\n                <Dropdown.Item style={{ color: 'black' }} href=\"#/action-2\">Impostazioni</Dropdown.Item>\n                <Dropdown.Divider />\n                \n                <Dropdown.Item style={{ color: 'black' }} onClick={handleLogout}>Esci</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n              </Nav.Item>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <Container className=\"mt-4\">\n        <Row>\n          <Col md={3}>\n            <h4>Classi disponibili</h4>\n            <Form className=\"d-flex\">\n              <Form.Control type=\"text\" placeholder=\"Cerca classe\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)} />\n            </Form>\n            <ListGroup style={{ height: '400px', overflowY: 'auto', marginTop: '1rem' }}>\n              {classList.map((classItem) => (\n                <ListGroup.Item\n                  key={classItem.name}\n                  action\n                  active={selectedClass === classItem.name}\n                  onClick={() => handleClassSelect(classItem.name)}\n                  className=\"d-flex align-items-center\"\n                  style={{ paddingRight: '0.5rem' }}\n                >\n                  {selectedClass === classItem.name ? (\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                      <FontAwesomeIcon icon={faCheck} style={{ color: 'blue', marginRight: '0.5rem' }} />\n                      <span style={{ marginLeft: '0.5rem' }}>{classItem.name}</span>\n                    </div>\n                  ) : (\n                    <>\n                      <FontAwesomeIcon icon={classItem.icon} style={{ marginRight: '0.5rem' }} />\n                      <span style={{ marginLeft: '0.5rem' }}>{classItem.name}</span>\n                    </>\n                  )}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Col>\n          <Col md={6} className=\"d-flex justify-content-center\">\n            <div className=\"circle-container\" style={{ marginBottom: '105rem' }}>\n              {isDropdownOpen && (\n                <div className=\"search-container position-relative \">\n                  <div className=\"input-container\">\n                  <input type=\"text\" placeholder=\"Inserisci Id amico\" value={inviteText} onChange={handleInviteTextChange} />\n                  {renderSuggestedFriends()}\n                  </div>\n                  <button className=\"invite-button\" onClick={() => handleInviteClick(inviteText)}>\n                    Invita\n                  </button>\n                </div>\n              )}\n              \n              <div className={`circle ${isDropdownOpen ? 'open' : ''} ${isDropdownOpen ? 'hide' : ''}`} onClick={handleToggleDropdown}>\n                <span className=\"invite-friends\">Invita Amici</span>\n              </div>\n              \n            </div>\n          </Col>\n          <Col md={3}>\n            <h4>Robot disponibili</h4>\n            <ListGroup style={{ height: '400px', overflowY: 'auto', maxWidth: '400px' }} ref={robotListRef}>\n              {robotList.map((robot) => (\n                <ListGroup.Item\n                  key={robot.name}\n                  action\n                  active={selectedRobot === robot.name}\n                  onClick={() => handleRobotSelect(robot.name)}\n                  className={`d-flex align-items-center ${selectedRobot === robot.name ? 'robot-selected' : ''}`}\n                  data-robot-name={robot.name}\n                  style={{ paddingRight: '0.5rem' }}\n                >\n                  {selectedRobot === robot.name ? (\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                      <FontAwesomeIcon icon={faCheck} style={{ color: 'blue', marginRight: '0.5rem' }} />\n                      <span style={{ marginLeft: '0.5rem' }}>{robot.name}</span>\n                    </div>\n                  ) : (\n                    <>\n                      <FontAwesomeIcon icon={robot.icon} style={{ marginRight: '0.5rem' }} />\n                      <span style={{ marginLeft: '0.5rem' }}>{robot.name}</span>\n                    </>\n                  )}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n      <footer className=\"mt-4 py-3 bg-light text-center\">\n        <div className=\"navigation\">\n          <a href=\"/mod\">\n            <FontAwesomeIcon icon={faArrowLeft} style={{ color: 'black' }} />\n          </a>\n          <Button variant=\"primary\" size=\"md\" className=\"confirm-button\" onClick={handleConfirm}>\n            \n  Conferma selezione\n\n</Button>\n          <a href=\"/about\">\n            <FontAwesomeIcon icon={faArrowRight} style={{ color: 'black' }} />\n          </a>\n        </div>\n      </footer>\n      <Modal show={showInviteModal} onHide={handleInviteModalClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Invita amico</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Hai inviato un invito all'amico con ID: <strong>{inviteText}</strong>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleInviteModalClose}>\n            Chiudi\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      \n    </div>\n  );\n}\n\nexport default Home;\n\n\n","\nimport React, { useState, useEffect } from 'react';\nimport { Container, ProgressBar } from 'react-bootstrap';\n\nconst LoadingPage = () => {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (progress < 100) {\n        setProgress(progress + 10);\n      }\n    }, 500);\n\n    return () => clearInterval(interval);\n  }, [progress]);\n\n  return (\n    <Container className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\n      <ProgressBar now={progress} label={`${progress}%`} style={{ width: '50%' }} />\n    </Container>\n  );\n};\n\nexport default LoadingPage;\n\n\n\n","import { faUser, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Form, Navbar, Dropdown, Modal, ListGroup } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport './Modalita.css';\nimport './aggiunta.css'\nfunction Modalita() {\n  const [gameMode, setGameMode] = useState('');\n  const [numTurns, setNumTurns] = useState('');\n  const [showInvites, setShowInvites] = useState(false); // Stato per il modale degli inviti ricevuti\n  const navigate = useNavigate();\n  // Recupera i valori memorizzati nel LocalStorage\nconst gamee = localStorage.getItem('gameId');\nconst invito = localStorage.getItem('inviteId');\n\n// Stampa i valori nel LocalStorage\nconsole.log('Valore di gameId nel LocalStorage:', gamee);\nconsole.log('Valore di inviteId nel LocalStorage:', invito);\n\n  const handleGameModeSelect = (mode) => {\n    setGameMode(mode);\n    localStorage.setItem('gameMode', mode);\n  };\n\n  const [gameIds, setGameIds] = useState([]);\n  const [InvitoIds, setInvitoIds] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [gamesData, setGamesData] = useState([]);\n  const [senderIds, setSenderIds] = useState([]);\n  \n  const [selectedId, setSelectedId] = useState(null);\n  const [emails, setEmails] = useState([]);\n\n  const [userData, setUserData] = useState({});\n  /*\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('email');\n    const storedId = localStorage.getItem('id');\n    const storedName = localStorage.getItem('name');\n    if (storedEmail && !userData.id) {\n      fetch(`http://localhost:8080/player/email/${storedEmail}`)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          localStorage.setItem('id', data.id_player);\n          localStorage.setItem('name', data.name);\n          setUserData(data);\n        })\n        .catch(error => {\n          console.error('Error retrieving user data:', error);\n        });\n    } else {\n      setUserData({\n        id_player: storedId,\n        name: storedName,\n      });\n    }\n  }, []);\n  */\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('email');\n    const storedId = localStorage.getItem('id');\n    const storedName = localStorage.getItem('name');\n    if (storedEmail && !userData.id) {\n      fetch(`http://localhost:8080/player/email/${storedEmail}`)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          localStorage.setItem('id', data.id_player);\n          localStorage.setItem('name', data.name);\n          setUserData(data);\n  \n          // esegui la chiamata API per recuperare gli inviti\n          fetch(`http://localhost:8080/invitations/recuperoinviti/${data.id_player}`)\n            .then(response => {\n              if (!response.ok) {\n                throw new Error('Network response was not ok');\n              }\n              return response.json();\n            })\n            .then(data => {\n              console.log(data);\n              const invitoid = data.map(invitation => invitation.id);\n              const ids = data.map(invitation => invitation.senderid);\n              setSenderIds(ids);\n              setInvitoIds(invitoid);\n              setGameIds(data.map(invitation => invitation.game_id));\n              setIsLoading(false);\n            })\n            .catch(error => {\n              console.error('Error retrieving invitation data:', error);\n              setError(error);\n              setIsLoading(false);\n            });\n        })\n        .catch(error => {\n          console.error('Error retrieving user data:', error);\n        });\n    } else {\n      setUserData({\n        id_player: storedId,\n        name: storedName,\n      });\n  \n      // esegui la chiamata API per recuperare gli inviti\n      fetch(`http://localhost:8080/invitations/recuperoinviti/${storedId}`)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => {\n          console.log(data);\n          const invitoid = data.map(invitation => invitation.id);\n          const ids = data.map(invitation => invitation.senderid);\n          setSenderIds(ids);\n          setInvitoIds(invitoid);\n          setGameIds(data.map(invitation => invitation.game_id));\n          setIsLoading(false);\n        })\n        .catch(error => {\n          console.error('Error retrieving invitation data:', error);\n          setError(error);\n          setIsLoading(false);\n        });\n    }\n  }, []);\n /*\nuseEffect(() => {\n  const storedId = localStorage.getItem('id');\n  fetch(`http://localhost:8080/invitations/recuperoinviti/${storedId}`)\n\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log(data);\n      const invitoid=data.map(invitation => invitation.id);\n      const ids = data.map(invitation => invitation.senderid);\n      setSenderIds(ids);\n      setInvitoIds(invitoid);\n     \n      setGameIds(data.map(invitation =>invitation.game_id));\n      \n      setIsLoading(false);\n    })\n    .catch(error=> {\n      console.error('Error retrieving invitation data:', error);\n      setError(error);\n      setIsLoading(false);\n    });\n}, []);\n*/\n  const handleNumTurnsSelect = (num) => {\n    setNumTurns(num);\n    localStorage.setItem('numTurns', num);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('id');\n    localStorage.removeItem('email');\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n\n  const handleStartGame = () => {\n    localStorage.setItem('selectedTurn', numTurns);\n    localStorage.setItem('selectedMode', gameMode);\n    if (gameMode === 'singolo') {\n      navigate('/Single');\n    } else if (gameMode === 'multigiocatore') {\n      navigate('/Multi');\n    }\n  };\n\n  const savedGameMode = localStorage.getItem('gameMode');\n  const savedNumTurns = localStorage.getItem('numTurns');\n  const userEmail = localStorage.getItem('email');\n  \n  useEffect(() => {\n    if (savedGameMode) {\n      setGameMode(savedGameMode);\n    }\n    if (savedNumTurns) {\n      setNumTurns(savedNumTurns);\n    }\n  }, []);\n\n  const handleShowInvites = (ids) => {\n    setShowInvites(true);\n    setSelectedId(ids);\n   \n\n    Promise.all(ids.map(id =>\n      fetch(`http://localhost:8080/player/${id}/email`)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n    ))\n    .then(emailsArray => {\n      const emails = emailsArray.map(emailObject => ({\n        email: emailObject.email,\n        isValid: emailObject.valid || null\n      }));\n      setEmails(emails);\n    })\n    .catch(error => {\n      console.error('Error retrieving email data:', error);\n      setEmails([]);\n    });\n    \n  };\n\n  const handleCloseInvites = () => {\n    setShowInvites(false);\n  };\n\n  \n  useEffect(() => {\n    Promise.all(gameIds.map(gameId =>\n      fetch(`http://localhost:8080/game/${gameId}`)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n    ))\n    .then(gamesData => {\n      setGamesData(gamesData);\n      console.log(\"waglio\",gamesData);\n    })\n    .catch(error => {\n      console.error('Error retrieving game data:', error);\n      setGamesData([]);\n    });\n  }, [gameIds]);\n\n\n  \n  //console.log(\"cisei\",scu);\n\n  function handleConfirmEmail(gameId,inviteId) {\n    localStorage.setItem('gameId', gameId);\n    localStorage.setItem('inviteId', inviteId);\n    console.log('Valore di gameId nel LocalStorage:', localStorage.getItem('gameId'));\n  console.log('Valore di inviteId nel LocalStorage:', localStorage.getItem('inviteId'));\n        \n    fetch(`http://localhost:8080/game/${gameId}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      const { robot, classe, turni, modalita } = data;\n      const nomino= localStorage.getItem('name');\n      const nid= localStorage.getItem('id');\n\n      const gameData = {\n        robot: robot,\n        classe: classe,\n        turni: turni,\n        modalita: modalita,\n        name:nomino,\n        id:nid\n      }\n      fetch(`http://localhost:8080/invitations/accept/${inviteId}`, {\n        method: 'PUT'\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        console.log('Invito accettato con successo.');\n        \n      })\n      .catch(error => {\n        console.error('Errore durante l\\'accettazione dell\\'invito:', error);\n      });\n      fetch('http://localhost:8080/game/add', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(gameData)\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log('Dati del gioco inviati al server:', data);\n       navigate('/join');\n      })\n      .catch(error => {\n        console.error('Errore durante la chiamata API per aggiungere il gioco:', error);\n      });\n    })\n    .catch(error => {\n      console.error('Errore durante la conferma dell\\'email:', error);\n    });\n/*\n    fetch(`http://localhost:8080/invitations/delete/${inviteId}`, {\n        method: 'DELETE'\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        console.log('Invito eliminato con successo.');\n      })\n      .catch(error => {\n        console.error('Errore durante la cancellazione dell\\'invito:', error);\n      });\n    \n   */\n\n\n  }\n  function handleRejectEmail(inviteId) {\n    const storedId = localStorage.getItem('id');\n    fetch(`http://localhost:8080/invitations/delete/${inviteId}`, {\n      method: 'DELETE'\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      console.log('Invito eliminato con successo.');\n      setIsLoading(true); \n      return fetch(`http://localhost:8080/invitations/recuperoinviti/${storedId}`); \n    })\n    .then(response =>{\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      const invitoid = data.map(invitation => invitation.id);\n      const ids = data.map(invitation => invitation.senderid);\n      setSenderIds(ids);\n      setInvitoIds(invitoid);\n      setGameIds(data.map(invitation =>invitation.game_id));\n      setIsLoading(false); // Imposta isLoading su false per nascondere l'indicatore di caricamento\n    })\n    .catch(error => {\n      console.error('Errore durante la cancellazione dell\\'invito:', error);\n    });\n  }\n  if (!userEmail) {\n    return (\n      <div>Accesso proibito. Esegui il login per accedere a questa pagina.</div>\n    );\n  }\n\n  return (\n   \n    <>\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Navbar.Brand href=\"#\">Configura nuova partita</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Text style={{ marginRight: '2rem' }}>\n            <Dropdown>\n              <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\" style={{ background: 'none', border: 'none', padding: '0', color: 'black' }}>\n                <FontAwesomeIcon icon={faUser} style={{ marginRight: '0.3rem', color:'black' }} />\n                {userEmail}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item style={{ color: 'black' }} href=\"#/action-1\">Profilo</Dropdown.Item>\n                <Dropdown.Item style={{ color: 'black' }} onClick={() => handleShowInvites(senderIds)}>\n \n                  Inviti ricevuti <FontAwesomeIcon icon={faEnvelope} style={{ marginLeft: '0.3rem' }} />\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item style={{ color: 'black' }} onClick={handleLogout}>Esci</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Navbar.Text>\n        </Navbar.Collapse>\n      </Navbar>\n      <Container className=\"mt-4\">\n        <Row>\n          <Col md={4}>\n            <h4>Modalità di gioco</h4>\n            <ul className=\"list-group\">\n              <li\n                className={`list-group-item ${\n                  gameMode === 'singolo' ? 'active' : ''\n                }`}\n                onClick={() => handleGameModeSelect('singolo')}\n              >\n                Singolo giocatore\n              </li>\n              <li\n                className={`list-group-item ${\n                  gameMode === 'multigiocatore' ? 'active' : ''\n                }`}\n                onClick={() => handleGameModeSelect('multigiocatore')}\n              >\n                Multigiocatore\n              </li>\n            </ul>        \n              </Col>\n          <Col md={4}>\n            <h4>Seleziona numero di turni</h4>\n            <Form>\n              <Form.Group controlId=\"selectTurn\">\n                <Form.Control as=\"select\" value={numTurns} onChange={(e) => handleNumTurnsSelect(e.target.value)}>\n                  <option value=\"1\">1 Turno</option>\n                  <option value=\"2\">2 Turni</option>\n                  <option value=\"3\">3 Turni</option>\n                  <option value=\"4\">4 Turni</option>\n                </Form.Control>\n              </Form.Group>\n            </Form>\n          </Col>\n          <Col md={4} className=\"d-flex align-items-end justify-content-center\">\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col md={{ span: 4, offset: 4 }} className=\"text-center\">\n            <Button variant=\"primary\" className=\"mt-4\" onClick={handleStartGame}>\n              Avvia gioco\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n      {/* Componente modale per gli inviti ricevuti */}\n      <Modal show={showInvites} onHide={handleCloseInvites} className=\"custom-modal\">\n        <Modal.Header closeButton>\n          <Modal.Title>Inviti ricevuti</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <ListGroup>\n          {}\n        </ListGroup>\n        </Modal.Body>\n \n        <h2>Emails</h2>\n        <ul>\n            {emails.map((email, index) => (\n  <li key={email.email }>\n    \n    \n    <span>Email: {email.email}</span>\n    \n    <span> - IDinvito: {InvitoIds[index]}</span>\n    { (\n      <>\n        <button className=\"btn btn-danger \" style={{ marginTop: '0rem', padding: '-3rem 0rem' }}  onClick={() => handleConfirmEmail(gamesData[index].id_partita,InvitoIds[index])}>Accetta</button>\n        <button className=\"btn btn-danger\" onClick={() => handleRejectEmail(InvitoIds[index])}>Rifiuta</button>\n      </>\n    )}\n    </li>\n))}\n      \n      </ul>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseInvites}>\n            Chiudi\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default Modalita;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\n\r\nfunction Login() {\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  const handleInput = (event) => {        \r\n    setValues(prev => ({...prev, [event.target.name]: event.target.value}))\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  \r\n    axios.post('http://localhost:8080/player/login', values)\r\n    .then(response => {\r\n      \r\n      console.log(response.data);\r\n      setError('');\r\n      setValues({ email: '', password: '' });\r\n      setLoggedIn(true);\r\n      //localStorage.setItem('userId', response.data.userId); \r\n      localStorage.setItem('email', response.data); // Salva l'email dell'utente in localStorage\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n      const errorMessage = error.response.data;\r\n    if (errorMessage === 'Email not verified.') {\r\n      setError('Email not verified');\r\n    } else {\r\n      setError('Invalid username or password');\r\n    }\r\n    });\r\n  }\r\n  \r\n    \r\n  \r\n  \r\n\r\n  if (loggedIn) {\r\n    return <Navigate to=\"/mod\" />;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h1 className=\"text-center\">Login</h1>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Indirizzo email</Form.Label>\r\n            <Form.Control type=\"email\" name=\"email\" value={values.email} required onChange={handleInput} />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" name=\"password\" value={values.password} required onChange={handleInput} />\r\n          </Form.Group>\r\n\r\n          {error && <p className=\"text-danger\">{error}</p>}\r\n\r\n          <Button variant=\"primary\" type=\"submit\" className=\"login-button\">\r\n            Login\r\n          </Button>\r\n          <Link to=\"/via\" className=\"forgot-password-link\">\r\n            Password dimenticata?\r\n          </Link>\r\n          <Link to=\"/Signup\" className=\"btn btn-secondary register-button\">\r\n            Registrati\r\n          </Link>\r\n        </Form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;","import { faRobot, faCube, faCheck,faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Container, Row, Col, Button, ListGroup, Form, Navbar, Nav,Dropdown } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons/faArrowLeft';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons/faArrowRight';\r\n\r\n\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n  const [selectedClass, setSelectedClass] = useState('');\r\n  const [selectedRobot, setSelectedRobot] = useState('');\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const navigate = useNavigate();\r\n  const robotListRef = useRef(null);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    const storedEmail = localStorage.getItem('email');\r\n    if (storedEmail) {\r\n      setEmail(storedEmail);\r\n  \r\n     \r\n    }\r\n  }, []);\r\n  const storedEmail = localStorage.getItem('email');\r\n  const storedid = localStorage.getItem('id');\r\n  const storedname = localStorage.getItem('name');\r\n  fetch(`http://localhost:8080/player/email/${storedEmail}`)\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    console.log(data);\r\n     localStorage.setItem('id', data.id_player);\r\n    localStorage.setItem('name', data.name);\r\n  })\r\n  .catch(error => {\r\n    console.error('Error retrieving user data:', error);\r\n  });\r\n  const handleToggleDropdown = () => {\r\n    setIsDropdownOpen(!isDropdownOpen);\r\n  };\r\n\r\n  const handleClassSelect = (className) => {\r\n    setSelectedClass(className);\r\n    localStorage.setItem('selectedClass', className);\r\n    //window.location.href = \"http://localhost:8190/myapp?myParam=\" + encodeURIComponent(className);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('email');\r\n    localStorage.removeItem('token');\r\n    navigate('/');\r\n  };\r\n\r\n  const handleRobotSelect = (robotName) => {\r\n    setSelectedRobot(robotName);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    const selectedMode = localStorage.getItem('selectedMode');\r\n    const selectedTurn = localStorage.getItem('selectedTurn');\r\n\r\n    const gameData = {\r\n      classe: selectedClass, // varchar\r\n      robot: selectedRobot, // varchar\r\n      modalita: selectedMode, // varchar\r\n      turni: selectedTurn, // integer\r\n       id: storedid , \r\n      name: storedname\r\n    };\r\n    \r\n    fetch(\"http://localhost:8080/game/add\", {\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': \"application/json\" },\r\n      body: JSON.stringify(gameData)\r\n    })\r\n    \r\n    //.then(response => response.json())\r\n    .then(data => {\r\n      console.log('Game data sent to server:', data);\r\n      navigate('/about');\r\n    })\r\n    .catch(error => {\r\n      console.error('Error sending game data:', error);\r\n      console.log('json', gameData);\r\n    });\r\n  };\r\n  //const [classList, setClassList] = useState([]); decommentare\r\n  \r\n    \r\n  /*\r\n  integrazione t1-g20\r\n  useEffect(() => {\r\n    fetch('http://localhost:8090/classut_repo/viewAll')\r\n      .then(response => response.text())\r\n      .then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\r\n      .then(data => {\r\n        console.log(\"wewe\",data);\r\n        const items = data.getElementsByTagName(\"item\");\r\n        const newClassList = Array.from(items).map(item => {\r\n          const name = item.getAttribute(\"name\");\r\n          return { name: name, icon: faCube };\r\n        }).filter(classItem => {\r\n          return classItem.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n        });\r\n\r\n        setClassList(newClassList);\r\n      });\r\n  }, [searchTerm]);\r\n*/\r\n/*servequesto\r\nuseEffect(() => {\r\n  fetch('http://localhost:8090/classut_repo')\r\n    .then(response => response.text())\r\n    //.then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\r\n    .then(data => {\r\n      console.log(\"wewe\",data);\r\n\r\n      data = data.replace(\"[\", \"\").replace(\"]\", \"\").replace(/\"/g, \"\");\r\n      const newClassList = data.split(\",\").map(name =>  {\r\n        \r\n        return { name: name, icon: faCube };\r\n      }).filter(classItem => {\r\n        return classItem.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n      });\r\n\r\n      setClassList(newClassList);\r\n    });\r\n}, [searchTerm]);\r\n*/\r\n  \r\n  //const [searchTerm, setSearchTerm] = useState('');\r\n  const classList = [\r\n    \r\n    { name: 'Classe 1', icon: faCube },\r\n    { name: 'Classe 2', icon: faCube },\r\n    { name: 'Classe 3', icon: faCube }\r\n  ].filter((classItem) => {\r\n    return classItem.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n  });\r\n\r\n  const robotList = [\r\n    { name: 'Randoop', icon: faRobot },\r\n    { name: 'Evosuite', icon: faRobot }\r\n  ];\r\n\r\n  if (!email) {\r\n    return (\r\n      <div>Accesso proibito. Esegui il login per accedere a questa pagina.</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#\">Scelta configurazione</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ms-auto\">\r\n              <Nav.Item style={{ display: 'flex', alignItems: 'center',marginRight: '-4.5rem' }}>\r\n              <Dropdown>\r\n              <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\" style={{ background: 'none', border: 'none', padding: '0', color: 'black' }}>\r\n                <FontAwesomeIcon icon={faUser} style={{ marginRight: '0.3rem', color:'black' }} />\r\n                {email}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item style={{ color: 'black' }} href=\"#/action-1\">Profilo</Dropdown.Item>\r\n                <Dropdown.Item style={{ color: 'black' }} href=\"#/action-2\">Impostazioni</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                \r\n                <Dropdown.Item style={{ color: 'black' }} onClick={handleLogout}>Esci</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n                \r\n              </Nav.Item>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <Container className=\"mt-4\">\r\n        <Row>\r\n          <Col md={3}>\r\n            <h4>Classi disponibili</h4>\r\n            <Form className=\"d-flex\">\r\n              <Form.Control type=\"text\" placeholder=\"Cerca classe\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)} />\r\n            </Form>\r\n            <ListGroup style={{ height: '400px', overflowY: 'auto', marginTop: '1rem' }}>\r\n              {classList.map((classItem) => (\r\n                <ListGroup.Item\r\n                  key={classItem.name}\r\n                  action\r\n                  active={selectedClass === classItem.name}\r\n                  onClick={() => handleClassSelect(classItem.name)}\r\n                  className=\"d-flex align-items-center\"\r\n                  style={{ paddingRight: '0.5rem' }}\r\n                >\r\n                  {selectedClass === classItem.name ? (\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                      <FontAwesomeIcon icon={faCheck} style={{ color: 'blue', marginRight: '0.5rem' }} />\r\n                      <span style={{ marginLeft: '0.5rem' }}>{classItem.name}</span>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <FontAwesomeIcon icon={classItem.icon} style={{ marginRight: '0.5rem' }} />\r\n                      <span style={{ marginLeft: '0.5rem' }}>{classItem.name}</span>\r\n                    </>\r\n                  )}\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={6}></Col>\r\n          <Col md={3}>\r\n            <h4>Robot disponibili</h4>\r\n            <ListGroup style={{ height: '400px', overflowY: 'auto', maxWidth: '400px' }} ref={robotListRef}>\r\n              {robotList.map((robot) => (\r\n                <ListGroup.Item\r\n                  key={robot.name}\r\n                  action\r\n                  active={selectedRobot === robot.name}\r\n                  onClick={() => handleRobotSelect(robot.name)}\r\n                  className={`d-flex align-items-center ${selectedRobot === robot.name ? 'robot-selected' : ''}`}\r\n                  data-robot-name={robot.name}\r\n                  style={{ paddingRight: '0.5rem' }}\r\n                >\r\n                  {selectedRobot === robot.name ? (\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                      <FontAwesomeIcon icon={faCheck} style={{ color: 'blue', marginRight: '0.5rem' }} />\r\n                      <span style={{ marginLeft: '0.5rem' }}>{robot.name}</span>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <FontAwesomeIcon icon={robot.icon} style={{ marginRight: '0.5rem' }} />\r\n                      <span style={{ marginLeft: '0.5rem' }}>{robot.name}</span>\r\n                    </>\r\n                  )}\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <div className=\"navigation\">\r\n        <Button variant=\"link\" href=\"/mod\" className=\"navigation-button\">\r\n          <FontAwesomeIcon icon={faArrowLeft} style={{ color: 'black' }} />\r\n        </Button>\r\n        <Button variant=\"primary\" size=\"md\" className=\"confirm-button\" onClick={handleConfirm}>\r\n          Conferma selezione\r\n        </Button>\r\n        <Button variant=\"link\" href=\"/about\" className=\"navigation-button\">\r\n          <FontAwesomeIcon icon={faArrowRight} style={{ color: 'black' }} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\n\r\nimport './signup.css'; \r\n\r\nfunction Signup() {\r\n  const navigate = useNavigate();\r\n\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    surname: '',\r\n    email: '',\r\n    password: '',\r\n    courseofstudy:''\r\n  });\r\n\r\n  const handleInput = (event) => {\r\n    setValues(prev => ({...prev, [event.target.name]: event.target.value}))\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const playerData = {\r\n      name: values.name,\r\n      surname: values.surname,\r\n      email: values.email,\r\n      password: values.password,\r\n      courseofstudy: values.courseofstudy\r\n    };\r\n\r\n    \r\n\r\n    fetch(\"http://localhost:8080/player/add\", {\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': \"application/json\" },\r\n      body: JSON.stringify(playerData)\r\n    })\r\n    //.then(response => response.json())\r\n    \r\n    .then(response => response.text())\r\n    .then(data => {\r\n      if (data === 'Email già presente') {\r\n        // If the email already exists, show an error message to the user\r\n        alert('Email già presente. Si prega di utilizzare altra email.');\r\n      }\r\n        else\r\n{      console.log('Player data sent to server:', data);\r\n      // Reindirizza l'utente alla pagina di login dopo la registrazione\r\n      navigate('/');}\r\n    })\r\n    .catch(error => {\r\n      console.error('Error sending player data:', error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <section className=\"vh-100\" style={{ backgroundColor: '#eee' }}>\r\n      <Container className=\"h-100\">\r\n        <div className=\"row d-flex justify-content-center align-items-center h-100\">\r\n          <div className=\"col-lg-12 col-xl-11\">\r\n            <div className=\"card text-black\" style={{ borderRadius: '25px' }}>\r\n              <div className=\"card-body p-md-5\">\r\n                <div className=\"row justify-content-center\">\r\n                  <div className=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\r\n\r\n                    <p className=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">Sign up</p>\r\n\r\n                    <Form onSubmit={handleSubmit} className=\"mx-1 mx-md-4\">\r\n\r\n                      <div className=\"form-floating mb-4\">\r\n                        <input type=\"text\" id=\"name\" className=\"form-control\" name=\"name\" value={values.name} onChange={handleInput} required />\r\n                        <label className=\"form-label\" htmlFor=\"name\">Name</label>\r\n                      </div>\r\n\r\n                      <div className=\"form-floating mb-4\">\r\n                        <input type=\"text\" id=\"surname\" className=\"form-control\" name=\"surname\" value={values.surname} onChange={handleInput} required />\r\n                        <label className=\"form-label\" htmlFor=\"surname\">Surname</label>\r\n                      </div>\r\n\r\n                      <div className=\"form-floating mb-4\">\r\n                        <input type=\"email\" id=\"email\" className=\"form-control\" name=\"email\" value={values.email} onChange={handleInput} required />\r\n                        <label className=\"form-label\" htmlFor=\"email\">Email</label>\r\n                      </div>\r\n\r\n                      <div className=\"form-floating mb-4\">\r\n                        <input type=\"password\" id=\"password\" className=\"form-control\" name=\"password\" value={values.password} onChange={handleInput} required />\r\n                        <label className=\"form-label\" htmlFor=\"password\">Password</label>\r\n                      </div>\r\n\r\n                      <div className=\"form-floating mb-4\">\r\n                        <select id=\"courseofstudy\" className=\"form-select\" name=\"courseofstudy\" value={values.courseofstudy} onChange={handleInput} required>\r\n                        <option value=\"\">Seleziona un corso di studi</option>\r\n                        <option value=\"triennale\">Triennale</option>\r\n                        <option value=\"magistrale\">Magistrale</option>\r\n                        <option value=\"altro\">Altro</option>\r\n                        </select>\r\n                         <label className=\"form-label\" htmlFor=\"courseofstudy\">Course of study</label>\r\n                      </div>\r\n\r\n                      <div className=\"form-check d-flex justify-content-center mb-5\">\r\n                        <input className=\"form-check-input me-2\" type=\"checkbox\" value=\"\" id=\"form2Example3c\" required />\r\n                        <label className=\"form-check-label\" htmlFor=\"form2Example3\">\r\n                          I agree all statements in <a href=\"#!\">Terms of service</a>\r\n                        </label>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\r\n                        <Button type=\"submit\" className=\"btn btn-primary btn-lg\">Register</Button>\r\n                      </div>\r\n\r\n                    </Form>\r\n\r\n                  </div>\r\n                  <div className=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\r\n\r\n                  <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\"\r\n                      className=\"img-fluid\" alt=\"Sample image\" />\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Signup;","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Button from 'react-bootstrap/Button';\r\nfunction CheckAcceptedPage() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [message, setMessage] = useState('');\r\n  const [dotIndex, setDotIndex] = useState(0);\r\n  const [accepted, setAccepted] = useState(false); // stato di accettazione dell'invito\r\n  const navigate = useNavigate();\r\n  const [shouldBlockNavigation, setShouldBlockNavigation] = useState(true);\r\n  const inviteId = localStorage.getItem('invtoId');\r\n  const [isConfirmed, setIsConfirmed] = useState(false);\r\n  useEffect(() => {\r\n    const handleBeforeUnload = () => {\r\n      fetch(`http://localhost:8080/invitations/${inviteId}/offbyid`, {\r\n        method: 'PUT',\r\n      })\r\n        .then(response => {\r\n          console.log('API call successful');\r\n        })\r\n        .catch(error => {\r\n          console.log('API call failed', error);\r\n        });\r\n    };\r\n  \r\n    const handleUnload = () => {\r\n      fetch(`http://localhost:8080/invitations/${inviteId}/offbyid`, {\r\n        method: 'PUT',\r\n      })\r\n        .then(response => {\r\n          console.log('API call successful');\r\n        })\r\n        .catch(error => {\r\n          console.log('API call failed', error);\r\n        });\r\n    };\r\n  \r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n    window.addEventListener('unload', handleUnload);\r\n  \r\n    return () => {\r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n      window.removeEventListener('unload', handleUnload);\r\n    };\r\n  }, [inviteId]);\r\n  \r\n  useEffect(() => {\r\n    return () => {\r\n      fetch(`http://localhost:8080/invitations/${inviteId}/offbyid`, {\r\n        method: 'PUT',\r\n      })\r\n        .then(response => {\r\n          console.log('API call successful');\r\n        })\r\n        .catch(error => {\r\n          console.log('API call failed', error);\r\n        });\r\n    };\r\n  }, []);\r\n/*\r\n  useEffect(() => {\r\n    const handlePopstate = (e) => {\r\n      fetch(`http://localhost:8080/invitations/${inviteId}/offbyid`, {\r\n        method: 'PUT',\r\n      })\r\n        .then(response => {\r\n          console.log('API call successful');\r\n       // Imposta shouldBlockNavigation su false quando l'utente naviga indietro nella storia del browser\r\n        })\r\n        .catch(error => {\r\n          console.log('API call failed', error);\r\n        });\r\n    };\r\n  \r\n    window.addEventListener('popstate', handlePopstate);\r\n  \r\n    return () => {\r\n      window.removeEventListener('popstate', handlePopstate);\r\n    };\r\n  }, [inviteId]);\r\n  */\r\n \r\n  const handleConfirmNavigation = () => {\r\n    //const onpage = 'pagina_successiva'; // valore di esempio\r\n    fetch(`http://localhost:8080/invitations/${inviteId}/onbyid`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n     \r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data.message);\r\n        setIsConfirmed(true);\r\n         // naviga alla pagina specificata\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  \r\n  };\r\n  useEffect(() => {\r\n    if(isConfirmed){\r\n    const intervalId = setInterval(() => {\r\n      const inviteId = localStorage.getItem('invtoId');\r\n      if (!inviteId) {\r\n        setMessage('ID invito non trovato nel localStorage');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n  \r\n      fetch(`http://localhost:8080/invitations/checkAccepted/${inviteId}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setMessage(data.message);\r\n          setLoading(false);\r\n          if (data.message === `Invitation with ID ${inviteId} has been accepted`) {\r\n            setAccepted(true);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Errore durante la chiamata API:', error);\r\n          setMessage('Errore durante la chiamata API');\r\n          setLoading(false);\r\n        });\r\n    }, 2000); // Richiama l'API ogni 3 secondi\r\n  \r\n    return () => clearInterval(intervalId);\r\n  }\r\n  }, [isConfirmed]);\r\n\r\n  useEffect(() => {\r\n    if (accepted && isConfirmed) {\r\n      navigate('/about');\r\n    }\r\n  }, [accepted, navigate]);\r\n\r\n  useEffect(() => {\r\n    const dotIntervalId = setInterval(() => {\r\n      setDotIndex(dotIndex => (dotIndex + 1) % 4);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(dotIntervalId);\r\n  }, []);\r\n\r\n  const dotSize = 40;\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n    \r\n          {shouldBlockNavigation && (\r\n        <Button variant=\"primary\" onClick={handleConfirmNavigation}>Crea Lobby</Button>\r\n      )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (message !== 'Invitation not found' && message !== `Invitation with ID ${localStorage.getItem('invtoId')} has been accepted`) {\r\n    return (\r\n      <div className=\"loading-container\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n          {[0, 1, 2, 3].map(index => (\r\n        <span key={index} style={{ marginRight: 5, fontSize: dotSize, color: '#ccc' }}>\r\n        {index === dotIndex ? <span style={{ color: 'black', fontSize: '100px' }}>.</span> : ''}\r\n      </span>\r\n          ))}\r\n        </div>\r\n        <div>\r\n      {/* Component JSX */}\r\n      {shouldBlockNavigation }\r\n    </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport default CheckAcceptedPage;","import React, { useState,useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction PasswordResetForm( ) {\r\n  const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const token = new URLSearchParams(location.search).get('token');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n  \r\n    // Aggiungi questo controllo per verificare se il token è stato ricevuto correttamente\r\n    useEffect(() => {\r\n      if (!token) {\r\n        setErrorMessage('Invalid token');\r\n      }\r\n    }, [token]);\r\n  \r\n    const handlePasswordChange = (event) => {\r\n      setPassword(event.target.value);\r\n    };\r\n  \r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n  \r\n      // Aggiungi questo controllo per verificare se la password inserita dall'utente è valida\r\n      if (password.length < 8) {\r\n        setErrorMessage('Password must be at least 8 characters long');\r\n        return;\r\n      }\r\n  \r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ token: token, password: password }),\r\n      };\r\n  \r\n      fetch('http://localhost:8080/preset/reset', requestOptions)\r\n        .then((response) => response.text())\r\n          .then((data) => {\r\n            if (data === 'password-reset-error') {\r\n              \r\n              setErrorMessage('Token non valido');\r\n            }\r\n            else{\r\n          setSuccessMessage('Password reset successful');\r\n          setErrorMessage('');\r\n          navigate('/');\r\n            }\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(error.message);\r\n          setSuccessMessage('');\r\n        });\r\n    };\r\n    return (\r\n        <Container className=\"d-flex flex-column justify-content-center align-items-center min-vh-100\">\r\n          <Row className=\"justify-content-center\">\r\n            <Col md={6}>\r\n           \r\n             \r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"formPassword\">\r\n                  <Form.Label>New Password</Form.Label>\r\n                  <Form.Control type=\"password\" value={password} onChange={handlePasswordChange} style={{ width: '215%' }} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\r\n                  Reset Password\r\n                </Button>\r\n              </Form>\r\n              {errorMessage && <div className=\"text-danger mt-3\">{errorMessage}</div>}\r\n              {successMessage && <div className=\"text-success mt-3\">{successMessage}</div>}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n    \r\n    export default PasswordResetForm;","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nfunction PasswordResetForm() {\r\n  const [email, setEmail] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    axios\r\n      .post('http://localhost:8080/preset/request', { email: email })\r\n      .then((response) => {\r\n        if(response.data===\"Not Found\"){\r\n          alert('Non esiste un account con questa email');\r\n        }\r\n     else{\r\n        setSuccessMessage('Password reset link sent to your email');\r\n        setError('');\r\n     }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        if (error.response && error.response.status === 404 && error.response.data === \"Not Found\") {\r\n          setError('L\\'indirizzo email non esiste.');\r\n     \r\n        } else {\r\n          setError('Si è verificato un errore durante la richiesta di ripristino password.');\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column align-items-center mt-5\">\r\n \r\n      <div className=\"w-30\">\r\n      <h1>Password Reset</h1>\r\n      {successMessage && <p className=\"text-success\">{successMessage}</p>}\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" size=\"md\" value={email} onChange={handleEmailChange} />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\"  className=\"mt-3\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordResetForm;","import React from 'react';\r\n\r\n//const url = `http://localhost:8190/myapp?myParam=${myParamValue}`;\r\nfunction OtherApp() {\r\n  const selectedClass = localStorage.getItem('selectedClass');\r\n  console.log(selectedClass);\r\n  const url = `http://localhost:8190/myapp?myParam=${selectedClass}`;\r\n    return (\r\n      \r\n      <iframe \r\n        src={url}\r\n        title=\"Editor\" \r\n        style={{ \r\n          border: 'none', \r\n          height: '100vh', \r\n          width: '100vw' \r\n        }} \r\n        allowFullScreen \r\n      />\r\n    );\r\n  }\r\nexport default OtherApp;","/*\r\nimport React from 'react';\r\n\r\nclass SetOnPagePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      onpage: true,\r\n      senderId: props.senderId\r\n    };\r\n  }\r\n\r\n  setOnPage = () => {\r\n    fetch(`http://localhost:8080/invitations/${this.state.senderId}/on`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        onpage: this.state.onpage\r\n      }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data.message);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  handleBeforeUnload = (event) => {\r\n    event.preventDefault();\r\n    fetch(`http://localhost:8080/invitations/${this.state.senderId}/off`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        onpage: false\r\n      }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data.message);\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n    return event.returnValue = 'Sei sicuro di voler lasciare questa pagina?';\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.onbeforeunload = this.handleBeforeUnload;\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.onbeforeunload = null;\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Set On Page</h1>\r\n        <button onClick={this.setOnPage}>Set On Page</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <SetOnPagePage senderId={511} />\r\n  );\r\n}\r\n\r\nexport default App;\r\n*/\r\n\r\nimport React from 'react';\r\nimport { useEffect,useState } from 'react';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nfunction MyComponent() {\r\n  //const [inviteId, setinviteId] = useState(null);\r\n  //const shouldBlockNavigation = true;\r\n  const [shouldBlockNavigation, setShouldBlockNavigation] = useState(true); // determina se bloccare la navigazione o meno\r\n  const navigate = useNavigate();\r\n  const inviteId = localStorage.getItem('invtoId');\r\n  useEffect(() => {\r\n    \r\n    const handleBeforeUnload = (e) => {\r\n      fetch(`http://localhost:8080/invitations/${inviteId}/offbyid`, {\r\n        method: 'PUT',\r\n      })\r\n        .then(response => {\r\n          console.log('API call successful');\r\n        })\r\n        .catch(error => {\r\n          console.log('API call failed', error);\r\n        });\r\n    };\r\n\r\n    window.addEventListener('beforeunload', handleBeforeUnload);\r\n\r\n    return () => {\r\n      \r\n      window.removeEventListener('beforeunload', handleBeforeUnload);\r\n    };\r\n  }, [inviteId]);\r\n\r\n\r\n \r\n  const handleConfirmNavigation = () => {\r\n    //const onpage = 'pagina_successiva'; // valore di esempio\r\n    fetch(`http://localhost:8080/invitations/${inviteId}/onbyid`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n     \r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data.message);\r\n         // naviga alla pagina specificata\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  \r\n  };\r\n/*\r\n  const handleAbandonNavigation = () => {\r\n    // esegui il codice per abbandonare l'azione\r\n    // e chiamare l'API per impostare onpage a false\r\n    fetch(`http://localhost:8080/invitations/${senderId}/off`, {\r\n      method: 'PUT',\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data.message);\r\n        // naviga alla home page\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.onbeforeunload = () => {\r\n      handleAbandonNavigation();\r\n    };\r\n  }, []);\r\n\r\n*/\r\n  return (\r\n    <div>\r\n      {}\r\n      {shouldBlockNavigation && (\r\n        <button onClick={handleConfirmNavigation}>Conferma</button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComponent;\r\n","//import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n/*\r\nfunction JoinGamePage() {\r\n  const { playerName } = useParams();\r\n  const [joiningGame, setJoiningGame] = useState(false);\r\n\r\n  const handleJoinGame = async () => {\r\n    setJoiningGame(true);\r\n    try {\r\n        const playerName1 = 'A';\r\n        await axios.post('http://localhost:8080/join-game?playerName='+playerName1, {\r\n          params: {\r\n            playerName: playerName\r\n          }\r\n        });\r\n        console.log('Joined game successfully');\r\n      } catch (error) {\r\n        console.error('Failed to join game', error);\r\n      }\r\n      \r\n      setJoiningGame(false);}\r\n\r\n  return (\r\n    <div>\r\n      <h1>Join game</h1>\r\n      <p>Player name: {playerName}</p>\r\n      <button onClick={handleJoinGame} disabled={joiningGame}>\r\n        {joiningGame ? 'Joining game...' : 'Join game'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JoinGamePage;\r\n*/\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\n\r\nfunction MyComponent() {\r\n  const [onpage, setOnpage] = useState(null);\r\n  const invitationId =  localStorage.getItem('inviteId');\r\n\r\n  console.log('Valore di inviteId nel LocalStorage:', invitationId);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n    fetch(`http://localhost:8080/invitations/invitations/${invitationId}/onpagebyid`)\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        \r\n          setOnpage(data.onpage);\r\n        \r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }, );\r\n \r\n\r\n    return () => clearInterval(interval);\r\n  }, [onpage]);\r\n  useEffect(() => {\r\n    if (onpage === true) {\r\n      navigate('/about');\r\n    }\r\n  }, [onpage, navigate]);\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      height: '100vh'\r\n    }}>\r\n    \r\n      {onpage === true ? (\r\n        <div style={{\r\n          fontSize: '2em',\r\n          fontFamily: 'Arial, sans-serif',\r\n          fontWeight: 'bold',\r\n          color: 'green'\r\n        }}>Ingresso in lobby</div>\r\n      ) : (\r\n        <div style={{\r\n          fontSize: '2em',\r\n          fontFamily: 'Arial, sans-serif',\r\n          fontWeight: 'bold',\r\n          color: 'red'\r\n        }}>Il player non è nella partita</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyComponent;","import \"./pages/App.css\";\r\nimport React from 'react'\r\nimport  { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Home from \"./pages/Multi\";\r\nimport Barra from \"./pages/Barra\";\r\nimport Modalita from \"./pages/Modalita\";\r\nimport Prova from \"./LoginREC/Login\";\r\nimport Single from \"./pages/Single\";\r\nimport Sign  from \"./LoginREC/Registrazione\";\r\nimport Prima from \"./Attesa/Attesa\";\r\nimport PasswordResetForm from \"./LoginREC/ResetPass\";\r\nimport PasswordResetReq from \"./LoginREC/PasswordResetLink\";\r\nimport OtherApp from \"./Editor/Editor\";\r\nimport Testare from \"./Blocco\";\r\nimport Joinare from \"./join\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Routes>\r\n        <Route path=\"/join\" element={<Joinare />} />\r\n        <Route path=\"/controllo\" element={<Testare />} />\r\n          <Route path=\"/about\" element={<Barra />} />\r\n          <Route path=\"/mod\" element={<Modalita />} />\r\n          <Route path=\"/Signup\" element={<Sign />} />\r\n          <Route path=\"/Multi\" element={<Home />} />\r\n          <Route path=\"/Single\" element={<Single />} />\r\n          <Route path=\"/\" element={<Prova />} />\r\n          <Route path=\"/casa\" element={<Prima />} />\r\n          <Route path=\"/elem\" element={<PasswordResetForm />} />\r\n          <Route path=\"/via\" element={<PasswordResetReq />} />\r\n          <Route path=\"/password-reset/reset\" element={<PasswordResetForm />} />\r\n          \r\n          <Route path=\"/about2\" element={<OtherApp />} />\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}