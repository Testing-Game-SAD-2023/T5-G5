{"version":3,"sources":["pages/Home.js","pages/Barra.js","pages/Modalita.js","LoginREC/Login.js","pages/Single.js","LoginREC/Registrazione.js","Attesa/Attesa.js","LoginREC/ResetPass.js","LoginREC/PasswordResetLink.js","Editor/Editor.js","App.js","reportWebVitals.js","index.js"],"names":["Home","_useState","useState","_useState2","_slicedToArray","selectedClass","setSelectedClass","_useState3","_useState4","selectedRobot","setSelectedRobot","_useState5","_useState6","searchTerm","setSearchTerm","_useState7","_useState8","inviteText","setInviteText","_useState9","_useState10","showInviteModal","setShowInviteModal","_useState11","_useState12","lastInvites","setLastInvites","uniqueFriends","Array","from","Set","robotListRef","useRef","navigate","useNavigate","_useState13","_useState14","isDropdownOpen","setIsDropdownOpen","_useState15","_useState16","email","setEmail","useEffect","storedEmail","localStorage","getItem","storedid","storedname","fetch","concat","then","response","json","data","console","log","setItem","id_player","name","catch","error","_useState17","_useState18","userData","setUserData","storedId","storedName","id","handleInviteModalClose","ok","Error","_useState19","_useState20","classList","setClassList","text","str","window","DOMParser","parseFromString","items","getElementsByTagName","newClassList","map","item","getAttribute","icon","faCube","filter","classItem","toLowerCase","includes","robotList","faRobot","React","createElement","Navbar","bg","variant","expand","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Item","style","display","alignItems","marginRight","Dropdown","background","border","padding","color","FontAwesomeIcon","faUser","Menu","Divider","onClick","removeItem","Row","Col","md","Form","Control","type","placeholder","value","onChange","event","target","ListGroup","height","overflowY","marginTop","key","action","active","paddingRight","faCheck","marginLeft","Fragment","marginBottom","suggestedFriends","slice","List","sx","width","maxWidth","bgcolor","position","zIndex","overflow","maxHeight","subheader","ListSubheader","friend","ListItem","button","ListItemText","primary","renderSuggestedFriends","_toConsumableArray","alert","ref","robot","robotName","data-robot-name","faArrowLeft","Button","size","selectedMode","selectedTurn","selectrec","gameData","classe","modalita","turni","method","headers","Content-Type","body","JSON","stringify","inviteData","game_id","senderid","recipientid","accepted","faArrowRight","Modal","show","onHide","Header","closeButton","Title","Body","Footer","LoadingPage","progress","setProgress","interval","setInterval","clearInterval","ProgressBar","now","label","Modalita","gameMode","setGameMode","numTurns","setNumTurns","showInvites","setShowInvites","handleGameModeSelect","mode","gameIds","setGameIds","InvitoIds","setInvitoIds","setIsLoading","setError","gamesData","setGamesData","senderIds","setSenderIds","setSelectedId","_useState21","_useState22","emails","setEmails","_useState23","_useState24","invitoid","invitation","ids","savedGameMode","savedNumTurns","userEmail","handleCloseInvites","Promise","all","gameId","Text","emailsArray","emailObject","isValid","valid","faEnvelope","Group","controlId","as","e","num","span","offset","index","id_partita","inviteId","handleRejectEmail","Login","password","values","setValues","loggedIn","setLoggedIn","handleInput","prev","_objectSpread","_defineProperty","Navigate","to","onSubmit","preventDefault","axios","post","errorMessage","Label","required","Link","Signup","surname","courseofstudy","backgroundColor","borderRadius","playerData","htmlFor","src","alt","CheckAcceptedPage","loading","setLoading","message","setMessage","dotIndex","setDotIndex","setAccepted","intervalId","dotIntervalId","justifyContent","fontSize","PasswordResetForm","location","useLocation","token","URLSearchParams","search","get","setPassword","setErrorMessage","successMessage","setSuccessMessage","length","requestOptions","status","OtherApp","title","allowFullScreen","App","Router","Routes","Route","path","element","Barra","Sign","Single","Prova","Prima","PasswordResetReq","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.14d7c482.chunk.js","sourcesContent":["\n\nimport './Modalita.css';\nimport './Ho.css';\nimport './Home.css';\nimport { List, ListItem, ListItemText, ListSubheader } from '@mui/material';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Container, Row, Col, Button, ListGroup, Form, Navbar, Nav, Modal,Dropdown } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faRobot, faCube, faCheck,faUser } from '@fortawesome/free-solid-svg-icons';\nimport { useNavigate } from 'react-router-dom';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons/faArrowLeft';\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons/faArrowRight';\nimport axios from 'axios';\nimport './App.css';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction Home() {\n  const [selectedClass, setSelectedClass] = useState('');\n  const [selectedRobot, setSelectedRobot] = useState('');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [inviteText, setInviteText] = useState('');\n  const [showInviteModal, setShowInviteModal] = useState(false);\n  const [lastInvites, setLastInvites] = useState([]);\n  const uniqueFriends = Array.from(new Set(lastInvites));\n  const robotListRef = useRef(null);\n  const navigate = useNavigate();\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n const [email, setEmail] = useState('');\n \n \n useEffect(() => {\n    const storedEmail = localStorage.getItem('email');\n    if (storedEmail) {\n      setEmail(storedEmail);\n  \n     \n    }\n  }, []);\n  const storedEmail = localStorage.getItem('email');\n  const storedid = localStorage.getItem('id');\n  const storedname = localStorage.getItem('name');\n  fetch(`http://localhost:8080/player/email/${storedEmail}`)\n  .then(response => response.json())\n  .then(data => {\n    console.log(data);\n     localStorage.setItem('id', data.id_player);\n    localStorage.setItem('name', data.name);\n  })\n  .catch(error => {\n    console.error('Error retrieving user data:', error);\n  });\n\n \n\n\n  const [userData, setUserData] = useState({});\n\n  useEffect(() => {\n    const storedEmail = localStorage.getItem('email');\n    const storedId = localStorage.getItem('id');\n    const storedName = localStorage.getItem('name');\n    if (storedEmail && !userData.id) {\n      fetch(`http://localhost:8080/player/email/${storedEmail}`)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          localStorage.setItem('id', data.id_player);\n          localStorage.setItem('name', data.name);\n          setUserData(data);\n        })\n        .catch(error => {\n          console.error('Error retrieving user data:', error);\n        });\n    } else {\n      setUserData({\n        id_player: storedId,\n        name: storedName,\n      });\n    }\n  }, []);\n\n\n\n  const handleLogout = () => {\n    localStorage.removeItem('email');\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n\n  const handleToggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n // localStorage.removeItem('id2');\n/*\n  const handleInviteClick = () => {\n    if (inviteText) {\n      setShowInviteModal(true);\n      setLastInvites([...lastInvites, inviteText]);\n      localStorage.setItem('recipientemail', inviteText);\n      fetch(`http://localhost:8080/player/email/${inviteText}`)\n      .then(response => response.json())\n      .then(data => {\n        localStorage.setItem('recipientid', data.id_player);\n      \n      })\n      .catch(error => {\n        console.error('Error retrieving player data:', error);\n      });\n  }\n  setIsDropdownOpen(false);\n};\n*/\n\nconst handleInviteClick = () => {\n  if (inviteText) {\n    fetch(`http://localhost:8080/player/exists/${inviteText}`)\n      .then(response => response.text())\n      .then(data => {\n        if (data === \"Trovato\") {\n          setShowInviteModal(true);\n          setLastInvites([...lastInvites, inviteText]);\n          localStorage.setItem('recipientemail', inviteText);\n          fetch(`http://localhost:8080/player/email/${inviteText}`)\n            .then(response => response.json())\n            .then(data => {\n              localStorage.setItem('recipientid', data.id_player);\n            })\n            .catch(error => {\n              console.error('Error retrieving player data:', error);\n            });\n        } else {\n          alert(\"L'account non esiste.\");\n          localStorage.removeItem('recipientid');\n        }\n      })\n      .catch(error => {\n        console.error('Error checking email existence:', error);\n      });\n  }\n  setIsDropdownOpen(false);\n};\n\nconst memo=localStorage.getItem('recipientid');\n\n  const handleInviteTextChange = (event) => {\n    setInviteText(event.target.value);\n  };\n\n  const handleInviteModalClose = () => {\n    setShowInviteModal(false);\n  };\n\n  const handleClassSelect = (className) => {\n    setSelectedClass(className);\n  };\n\n  const handleRobotSelect = (robotName) => {\n    setSelectedRobot(robotName);\n  };\n/*\n  \n\n  const handleConfirm = () => {\n    const selectedMode = localStorage.getItem('selectedMode');\n    const selectedTurn = localStorage.getItem('selectedTurn');\n  const selectrec=localStorage.getItem('recipientid');\n  const gameData = {\n      classe: selectedClass, // varchar\n      robot: selectedRobot, // varchar\n      modalita: selectedMode, // varchar\n      turni: selectedTurn, // integer\n       id: storedid , \n      name: storedname\n    };\n\n    \n\n    \n    fetch(\"http://localhost:8080/game/add\", {\n      method: \"POST\",\n      headers: { 'Content-Type': \"application/json\" },\n      body: JSON.stringify(gameData)\n    })\n  \n  \n\n \n    \n    .then(response => response.json())\n    .then(data => {\n      console.log( data);\n      localStorage.setItem('gameidentificativo', data);\n\n     \n      \n    })\n    .catch(error => {\n      console.error('Error sending game data:', error);\n     \n    });\n    const selectgid=localStorage.getItem('gameidentificativo');\n    const inviteData = {\n        game_id: selectgid, // varchar\n        sender_id: storedid, // varchar\n        recipientid: selectrec, // varchar\n      \n        accepted: \"false\"\n      };\n      fetch(\"http://localhost:8080/invitations/add\", {\n        method: \"POST\",\n        headers: { 'Content-Type': \"application/json\" },\n        body: JSON.stringify(inviteData)\n      })\n      //.then(response => response.json())\n      .then(data => {\n        console.log(data);\n        navigate('/about');\n      })\n      .catch(error => {\n        console.error('Error sending invitation data:', error);\n      });\n    \n   \n  };\n\n  */\n  const handleConfirm = () => {\n    const selectedMode = localStorage.getItem('selectedMode');\n    const selectedTurn = localStorage.getItem('selectedTurn');\n    const selectrec = localStorage.getItem('recipientid');\n    const gameData = {\n      classe: selectedClass, // varchar\n      robot: selectedRobot, // varchar\n      modalita: selectedMode, // varchar\n      turni: selectedTurn, // integer\n      id: storedid,\n      name: storedname\n    };\n    if (!selectedClass || !selectedRobot || inviteText === '') {\n      alert('Devi selezionare una classe, un robot e inserire un ID amico nel invito.');\n      return;\n    }\n    if (!selectrec) {\n      alert('Devi inserire un ID valido per l\\'amico invitato.');\n      return;\n    }\n\n\n\n    \n    fetch(\"http://localhost:8080/game/add\", {\n      method: \"POST\",\n      headers: { 'Content-Type': \"application/json\" },\n      body: JSON.stringify(gameData)\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        localStorage.setItem('gameidentificativo', data);\n  \n        const selectgid = localStorage.getItem('gameidentificativo');\n        \n  \n  \n    const inviteData = {\n      game_id: selectgid, // varchar\n      senderid: storedid, // varchar\n      recipientid: selectrec, // varchar\n      accepted: \"false\"\n    };\n    return fetch(\"http://localhost:8080/invitations/newadd\", {\n      method: \"POST\",\n      headers: { 'Content-Type': \"application/json\" },\n      body: JSON.stringify(inviteData)\n    });\n  })\n  .then(response => response.json())\n  .then(data => {\n    console.log(\"id eccolo\",data.id);\n    localStorage.setItem('invtoId', data.id);\n    navigate('/Casa');\n  })\n  .catch(error => {\n    console.error('Error sending invitation data:', error);\n  });\n\n  };\n  \n  const renderSuggestedFriends = () => {\n    const suggestedFriends = uniqueFriends.slice(0, 4);\n    return (\n      <List\n        sx={{\n          width: '100%',\n          maxWidth: 360,\n          bgcolor: 'background.paper',\n          position: 'absolute',\n          zIndex: 1,\n          overflow: 'auto',\n          maxHeight: 300,\n          marginTop: 2, // Add margin top here\n        }}\n        subheader={<li />}\n      >\n        <li>\n          <ul>\n            <ListSubheader>Amici Suggeriti</ListSubheader>\n            {suggestedFriends.map((friend) => (\n              <ListItem key={friend} button onClick={() => setInviteText(friend)}>\n                <ListItemText primary={friend} />\n              </ListItem>\n            ))}\n          </ul>\n        </li>\n      </List>\n    );\n  };\n  useEffect(() => {\n    const storedId = localStorage.getItem('id');\n    fetch(`http://localhost:8080/invitations/${storedId}/recent`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log(\"we\",data);\n      setLastInvites(data);\n\n    })\n    .catch(error=> {\n      console.error('Error retrieving invitation data:', error);\n    });\n    \n  }, []);\n/*\n  const classList = [\n    { name: 'Classe 1', icon: faCube },\n    { name: 'Classe 2', icon: faCube },\n    { name: 'Classe 3', icon: faCube }\n  ].filter((classItem) => {\n    return classItem.name.toLowerCase().includes(searchTerm.toLowerCase());\n  });*/\n\n  const [classList, setClassList] = useState([]);\n  \n    \n  \n  useEffect(() => {\n    fetch('http://localhost:8090/classut_repo/viewAll')\n      .then(response => response.text())\n      .then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\n      .then(data => {\n        console.log(\"wewe\",data);\n        const items = data.getElementsByTagName(\"item\");\n        const newClassList = Array.from(items).map(item => {\n          const name = item.getAttribute(\"name\");\n          return { name: name, icon: faCube };\n        }).filter(classItem => {\n          return classItem.name.toLowerCase().includes(searchTerm.toLowerCase());\n        });\n\n        setClassList(newClassList);\n      });\n  }, [searchTerm]);\n\n  const robotList = [\n    { name: 'Randoop', icon: faRobot },\n    { name: 'Evosuite', icon: faRobot }\n  ];\n\n  if (!email) {\n    return (\n      <div>Accesso proibito. Esegui il login per accedere a questa pagina.</div>\n    );\n  }\n\n  return (\n    <div>\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n        <Container>\n          <Navbar.Brand href=\"#\">Scelta configurazione</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ms-auto\">\n <Nav.Item style={{ display: 'flex', alignItems: 'center',marginRight: '-4.5rem' }}>\n <Dropdown>\n              <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\" style={{ background: 'none', border: 'none', padding: '0', color: 'black' }}>\n                <FontAwesomeIcon icon={faUser} style={{ marginRight: '0.3rem', color:'black' }} />\n                {email}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item style={{ color: 'black' }} href=\"#/action-1\">Profilo</Dropdown.Item>\n                <Dropdown.Item style={{ color: 'black' }} href=\"#/action-2\">Impostazioni</Dropdown.Item>\n                <Dropdown.Divider />\n                \n                <Dropdown.Item style={{ color: 'black' }} onClick={handleLogout}>Esci</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n              </Nav.Item>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      <Container className=\"mt-4\">\n        <Row>\n          <Col md={3}>\n            <h4>Classi disponibili</h4>\n            <Form className=\"d-flex\">\n              <Form.Control type=\"text\" placeholder=\"Cerca classe\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)} />\n            </Form>\n            <ListGroup style={{ height: '400px', overflowY: 'auto', marginTop: '1rem' }}>\n              {classList.map((classItem) => (\n                <ListGroup.Item\n                  key={classItem.name}\n                  action\n                  active={selectedClass === classItem.name}\n                  onClick={() => handleClassSelect(classItem.name)}\n                  className=\"d-flex align-items-center\"\n                  style={{ paddingRight: '0.5rem' }}\n                >\n                  {selectedClass === classItem.name ? (\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                      <FontAwesomeIcon icon={faCheck} style={{ color: 'blue', marginRight: '0.5rem' }} />\n                      <span style={{ marginLeft: '0.5rem' }}>{classItem.name}</span>\n                    </div>\n                  ) : (\n                    <>\n                      <FontAwesomeIcon icon={classItem.icon} style={{ marginRight: '0.5rem' }} />\n                      <span style={{ marginLeft: '0.5rem' }}>{classItem.name}</span>\n                    </>\n                  )}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Col>\n          <Col md={6} className=\"d-flex justify-content-center\">\n            <div className=\"circle-container\" style={{ marginBottom: '105rem' }}>\n              {isDropdownOpen && (\n                <div className=\"search-container position-relative \">\n                  <div className=\"input-container\">\n                  <input type=\"text\" placeholder=\"Inserisci Id amico\" value={inviteText} onChange={handleInviteTextChange} />\n                  {renderSuggestedFriends()}\n                  </div>\n                  <button className=\"invite-button\" onClick={() => handleInviteClick(inviteText)}>\n                    Invita\n                  </button>\n                </div>\n              )}\n              \n              <div className={`circle ${isDropdownOpen ? 'open' : ''} ${isDropdownOpen ? 'hide' : ''}`} onClick={handleToggleDropdown}>\n                <span className=\"invite-friends\">Invita Amici</span>\n              </div>\n              \n            </div>\n          </Col>\n          <Col md={3}>\n            <h4>Robot disponibili</h4>\n            <ListGroup style={{ height: '400px', overflowY: 'auto', maxWidth: '400px' }} ref={robotListRef}>\n              {robotList.map((robot) => (\n                <ListGroup.Item\n                  key={robot.name}\n                  action\n                  active={selectedRobot === robot.name}\n                  onClick={() => handleRobotSelect(robot.name)}\n                  className={`d-flex align-items-center ${selectedRobot === robot.name ? 'robot-selected' : ''}`}\n                  data-robot-name={robot.name}\n                  style={{ paddingRight: '0.5rem' }}\n                >\n                  {selectedRobot === robot.name ? (\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\n                      <FontAwesomeIcon icon={faCheck} style={{ color: 'blue', marginRight: '0.5rem' }} />\n                      <span style={{ marginLeft: '0.5rem' }}>{robot.name}</span>\n                    </div>\n                  ) : (\n                    <>\n                      <FontAwesomeIcon icon={robot.icon} style={{ marginRight: '0.5rem' }} />\n                      <span style={{ marginLeft: '0.5rem' }}>{robot.name}</span>\n                    </>\n                  )}\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          </Col>\n        </Row>\n      </Container>\n      <footer className=\"mt-4 py-3 bg-light text-center\">\n        <div className=\"navigation\">\n          <a href=\"/mod\">\n            <FontAwesomeIcon icon={faArrowLeft} style={{ color: 'black' }} />\n          </a>\n          <Button variant=\"primary\" size=\"md\" className=\"confirm-button\" onClick={handleConfirm}>\n            \n  Conferma selezione\n\n</Button>\n          <a href=\"/about\">\n            <FontAwesomeIcon icon={faArrowRight} style={{ color: 'black' }} />\n          </a>\n        </div>\n      </footer>\n      <Modal show={showInviteModal} onHide={handleInviteModalClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Invita amico</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          Hai inviato un invito all'amico con ID: <strong>{inviteText}</strong>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleInviteModalClose}>\n            Chiudi\n          </Button>\n        </Modal.Footer>\n      </Modal>\n      \n    </div>\n  );\n}\n\nexport default Home;\n\n\n","\nimport React, { useState, useEffect } from 'react';\nimport { Container, ProgressBar } from 'react-bootstrap';\n\nconst LoadingPage = () => {\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (progress < 100) {\n        setProgress(progress + 10);\n      }\n    }, 500);\n\n    return () => clearInterval(interval);\n  }, [progress]);\n\n  return (\n    <Container className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\n      <ProgressBar now={progress} label={`${progress}%`} style={{ width: '50%' }} />\n    </Container>\n  );\n};\n\nexport default LoadingPage;\n\n\n\n","import { faUser, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button, Form, Navbar, Dropdown, Modal, ListGroup } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport './Modalita.css';\nimport './aggiunta.css'\nfunction Modalita() {\n  const [gameMode, setGameMode] = useState('');\n  const [numTurns, setNumTurns] = useState('');\n  const [showInvites, setShowInvites] = useState(false); // Stato per il modale degli inviti ricevuti\n  const navigate = useNavigate();\n\n  const handleGameModeSelect = (mode) => {\n    setGameMode(mode);\n    localStorage.setItem('gameMode', mode);\n  };\n\n  const [gameIds, setGameIds] = useState([]);\n  const [InvitoIds, setInvitoIds] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [gamesData, setGamesData] = useState([]);\n  const [senderIds, setSenderIds] = useState([]);\n  \n  const [selectedId, setSelectedId] = useState(null);\n  const [emails, setEmails] = useState([]);\n\n  const [userData, setUserData] = useState({});\n  \n  useEffect(() => {\n    const storedEmail = localStorage.getItem('email');\n    const storedId = localStorage.getItem('id');\n    const storedName = localStorage.getItem('name');\n    if (storedEmail && !userData.id) {\n      fetch(`http://localhost:8080/player/email/${storedEmail}`)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          localStorage.setItem('id', data.id_player);\n          localStorage.setItem('name', data.name);\n          setUserData(data);\n        })\n        .catch(error => {\n          console.error('Error retrieving user data:', error);\n        });\n    } else {\n      setUserData({\n        id_player: storedId,\n        name: storedName,\n      });\n    }\n  }, []);\n\n\nuseEffect(() => {\n  const storedId = localStorage.getItem('id');\n  fetch(`http://localhost:8080/invitations/recuperoinviti/${storedId}`)\n\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      console.log(data);\n      const invitoid=data.map(invitation => invitation.id);\n      const ids = data.map(invitation => invitation.senderid);\n      setSenderIds(ids);\n      setInvitoIds(invitoid);\n     \n      setGameIds(data.map(invitation =>invitation.game_id));\n      \n      setIsLoading(false);\n    })\n    .catch(error=> {\n      console.error('Error retrieving invitation data:', error);\n      setError(error);\n      setIsLoading(false);\n    });\n}, []);\n  const handleNumTurnsSelect = (num) => {\n    setNumTurns(num);\n    localStorage.setItem('numTurns', num);\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('email');\n    localStorage.removeItem('token');\n    navigate('/');\n  };\n\n  const handleStartGame = () => {\n    localStorage.setItem('selectedTurn', numTurns);\n    localStorage.setItem('selectedMode', gameMode);\n    if (gameMode === 'singolo') {\n      navigate('/Single');\n    } else if (gameMode === 'multigiocatore') {\n      navigate('/Multi');\n    }\n  };\n\n  const savedGameMode = localStorage.getItem('gameMode');\n  const savedNumTurns = localStorage.getItem('numTurns');\n  const userEmail = localStorage.getItem('email');\n  \n  useEffect(() => {\n    if (savedGameMode) {\n      setGameMode(savedGameMode);\n    }\n    if (savedNumTurns) {\n      setNumTurns(savedNumTurns);\n    }\n  }, []);\n\n  const handleShowInvites = (ids) => {\n    setShowInvites(true);\n    setSelectedId(ids);\n   \n\n    Promise.all(ids.map(id =>\n      fetch(`http://localhost:8080/player/${id}/email`)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n    ))\n    .then(emailsArray => {\n      const emails = emailsArray.map(emailObject => ({\n        email: emailObject.email,\n        isValid: emailObject.valid || null\n      }));\n      setEmails(emails);\n    })\n    .catch(error => {\n      console.error('Error retrieving email data:', error);\n      setEmails([]);\n    });\n    \n  };\n\n  const handleCloseInvites = () => {\n    setShowInvites(false);\n  };\n\n  \n  useEffect(() => {\n    Promise.all(gameIds.map(gameId =>\n      fetch(`http://localhost:8080/game/${gameId}`)\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n    ))\n    .then(gamesData => {\n      setGamesData(gamesData);\n      console.log(\"waglio\",gamesData);\n    })\n    .catch(error => {\n      console.error('Error retrieving game data:', error);\n      setGamesData([]);\n    });\n  }, [gameIds]);\n\n\n  \n  function handleConfirmEmail(gameId,inviteId) {\n    fetch(`http://localhost:8080/game/${gameId}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      const { robot, classe, turni, modalita } = data;\n      const nomino= localStorage.getItem('name');\n      const nid= localStorage.getItem('id');\n\n      const gameData = {\n        robot: robot,\n        classe: classe,\n        turni: turni,\n        modalita: modalita,\n        name:nomino,\n        id:nid\n      }\n      fetch(`http://localhost:8080/invitations/accept/${inviteId}`, {\n        method: 'PUT'\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        console.log('Invito accettato con successo.');\n      })\n      .catch(error => {\n        console.error('Errore durante l\\'accettazione dell\\'invito:', error);\n      });\n      fetch('http://localhost:8080/game/add', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(gameData)\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        console.log('Dati del gioco inviati al server:', data);\n       navigate('/about');\n      })\n      .catch(error => {\n        console.error('Errore durante la chiamata API per aggiungere il gioco:', error);\n      });\n    })\n    .catch(error => {\n      console.error('Errore durante la conferma dell\\'email:', error);\n    });\n/*\n    fetch(`http://localhost:8080/invitations/delete/${inviteId}`, {\n        method: 'DELETE'\n      })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        console.log('Invito eliminato con successo.');\n      })\n      .catch(error => {\n        console.error('Errore durante la cancellazione dell\\'invito:', error);\n      });\n    \n   */\n\n\n  }\n  function handleRejectEmail(inviteId) {\n    const storedId = localStorage.getItem('id');\n    fetch(`http://localhost:8080/invitations/delete/${inviteId}`, {\n      method: 'DELETE'\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      console.log('Invito eliminato con successo.');\n      setIsLoading(true); \n      return fetch(`http://localhost:8080/invitations/recuperoinviti/${storedId}`); \n    })\n    .then(response =>{\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => {\n      const invitoid = data.map(invitation => invitation.id);\n      const ids = data.map(invitation => invitation.senderid);\n      setSenderIds(ids);\n      setInvitoIds(invitoid);\n      setGameIds(data.map(invitation =>invitation.game_id));\n      setIsLoading(false); // Imposta isLoading su false per nascondere l'indicatore di caricamento\n    })\n    .catch(error => {\n      console.error('Errore durante la cancellazione dell\\'invito:', error);\n    });\n  }\n  if (!userEmail) {\n    return (\n      <div>Accesso proibito. Esegui il login per accedere a questa pagina.</div>\n    );\n  }\n\n  return (\n   \n    <>\n      <Navbar bg=\"primary\" variant=\"dark\">\n        <Navbar.Brand href=\"#\">Configura nuova partita</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse className=\"justify-content-end\">\n          <Navbar.Text style={{ marginRight: '2rem' }}>\n            <Dropdown>\n              <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\" style={{ background: 'none', border: 'none', padding: '0', color: 'black' }}>\n                <FontAwesomeIcon icon={faUser} style={{ marginRight: '0.3rem', color:'black' }} />\n                {userEmail}\n              </Dropdown.Toggle>\n              <Dropdown.Menu>\n                <Dropdown.Item style={{ color: 'black' }} href=\"#/action-1\">Profilo</Dropdown.Item>\n                <Dropdown.Item style={{ color: 'black' }} onClick={() => handleShowInvites(senderIds)}>\n \n                  Inviti ricevuti <FontAwesomeIcon icon={faEnvelope} style={{ marginLeft: '0.3rem' }} />\n                </Dropdown.Item>\n                <Dropdown.Divider />\n                <Dropdown.Item style={{ color: 'black' }} onClick={handleLogout}>Esci</Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Navbar.Text>\n        </Navbar.Collapse>\n      </Navbar>\n      <Container className=\"mt-4\">\n        <Row>\n          <Col md={4}>\n            <h4>Modalità di gioco</h4>\n            <ul className=\"list-group\">\n              <li\n                className={`list-group-item ${\n                  gameMode === 'singolo' ? 'active' : ''\n                }`}\n                onClick={() => handleGameModeSelect('singolo')}\n              >\n                Singolo giocatore\n              </li>\n              <li\n                className={`list-group-item ${\n                  gameMode === 'multigiocatore' ? 'active' : ''\n                }`}\n                onClick={() => handleGameModeSelect('multigiocatore')}\n              >\n                Multigiocatore\n              </li>\n            </ul>        \n              </Col>\n          <Col md={4}>\n            <h4>Seleziona numero di turni</h4>\n            <Form>\n              <Form.Group controlId=\"selectTurn\">\n                <Form.Control as=\"select\" value={numTurns} onChange={(e) => handleNumTurnsSelect(e.target.value)}>\n                  <option value=\"1\">1 Turno</option>\n                  <option value=\"2\">2 Turni</option>\n                  <option value=\"3\">3 Turni</option>\n                  <option value=\"4\">4 Turni</option>\n                </Form.Control>\n              </Form.Group>\n            </Form>\n          </Col>\n          <Col md={4} className=\"d-flex align-items-end justify-content-center\">\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col md={{ span: 4, offset: 4 }} className=\"text-center\">\n            <Button variant=\"primary\" className=\"mt-4\" onClick={handleStartGame}>\n              Avvia gioco\n            </Button>\n          </Col>\n        </Row>\n      </Container>\n      {/* Componente modale per gli inviti ricevuti */}\n      <Modal show={showInvites} onHide={handleCloseInvites} className=\"custom-modal\">\n        <Modal.Header closeButton>\n          <Modal.Title>Inviti ricevuti</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        <ListGroup>\n          {}\n        </ListGroup>\n        </Modal.Body>\n \n        <h2>Emails</h2>\n        <ul>\n            {emails.map((email, index) => (\n  <li key={email.email }>\n    \n    \n    <span>Email: {email.email}</span>\n    \n    <span> - IDinvito: {InvitoIds[index]}</span>\n    { (\n      <>\n        <button className=\"btn btn-danger \" style={{ marginTop: '0rem', padding: '-3rem 0rem' }}  onClick={() => handleConfirmEmail(gamesData[index].id_partita,InvitoIds[index])}>Accetta</button>\n        <button className=\"btn btn-danger\" onClick={() => handleRejectEmail(InvitoIds[index])}>Rifiuta</button>\n      </>\n    )}\n    </li>\n))}\n      \n      </ul>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseInvites}>\n            Chiudi\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n\nexport default Modalita;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\nimport { Link, Navigate } from 'react-router-dom';\r\nimport './Login.css';\r\n\r\n\r\nfunction Login() {\r\n  const [values, setValues] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n\r\n  const handleInput = (event) => {        \r\n    setValues(prev => ({...prev, [event.target.name]: event.target.value}))\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n  \r\n    axios.post('http://localhost:8080/player/login', values)\r\n    .then(response => {\r\n      \r\n      console.log(response.data);\r\n      setError('');\r\n      setValues({ email: '', password: '' });\r\n      setLoggedIn(true);\r\n      //localStorage.setItem('userId', response.data.userId); \r\n      localStorage.setItem('email', response.data); // Salva l'email dell'utente in localStorage\r\n    })\r\n    .catch(error => {\r\n      console.error(error);\r\n      const errorMessage = error.response.data;\r\n    if (errorMessage === 'Email not verified.') {\r\n      setError('Email not verified');\r\n    } else {\r\n      setError('Invalid username or password');\r\n    }\r\n    });\r\n  }\r\n  \r\n    \r\n  \r\n  \r\n\r\n  if (loggedIn) {\r\n    return <Navigate to=\"/mod\" />;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"login-container\">\r\n      <div className=\"login-box\">\r\n        <h1 className=\"text-center\">Login</h1>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            <Form.Label>Indirizzo email</Form.Label>\r\n            <Form.Control type=\"email\" name=\"email\" value={values.email} required onChange={handleInput} />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" name=\"password\" value={values.password} required onChange={handleInput} />\r\n          </Form.Group>\r\n\r\n          {error && <p className=\"text-danger\">{error}</p>}\r\n\r\n          <Button variant=\"primary\" type=\"submit\" className=\"login-button\">\r\n            Login\r\n          </Button>\r\n          <Link to=\"/via\" className=\"forgot-password-link\">\r\n            Password dimenticata?\r\n          </Link>\r\n          <Link to=\"/Signup\" className=\"btn btn-secondary register-button\">\r\n            Registrati\r\n          </Link>\r\n        </Form>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;","import { faRobot, faCube, faCheck,faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport { Container, Row, Col, Button, ListGroup, Form, Navbar, Nav,Dropdown } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons/faArrowLeft';\r\nimport { faArrowRight } from '@fortawesome/free-solid-svg-icons/faArrowRight';\r\n\r\n\r\nimport './Home.css';\r\n\r\nfunction Home() {\r\n  const [selectedClass, setSelectedClass] = useState('');\r\n  const [selectedRobot, setSelectedRobot] = useState('');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const navigate = useNavigate();\r\n  const robotListRef = useRef(null);\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    const storedEmail = localStorage.getItem('email');\r\n    if (storedEmail) {\r\n      setEmail(storedEmail);\r\n  \r\n     \r\n    }\r\n  }, []);\r\n  const storedEmail = localStorage.getItem('email');\r\n  const storedid = localStorage.getItem('id');\r\n  const storedname = localStorage.getItem('name');\r\n  fetch(`http://localhost:8080/player/email/${storedEmail}`)\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    console.log(data);\r\n     localStorage.setItem('id', data.id_player);\r\n    localStorage.setItem('name', data.name);\r\n  })\r\n  .catch(error => {\r\n    console.error('Error retrieving user data:', error);\r\n  });\r\n  const handleToggleDropdown = () => {\r\n    setIsDropdownOpen(!isDropdownOpen);\r\n  };\r\n\r\n  const handleClassSelect = (className) => {\r\n    setSelectedClass(className);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('email');\r\n    localStorage.removeItem('token');\r\n    navigate('/');\r\n  };\r\n\r\n  const handleRobotSelect = (robotName) => {\r\n    setSelectedRobot(robotName);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    const selectedMode = localStorage.getItem('selectedMode');\r\n    const selectedTurn = localStorage.getItem('selectedTurn');\r\n\r\n    const gameData = {\r\n      classe: selectedClass, // varchar\r\n      robot: selectedRobot, // varchar\r\n      modalita: selectedMode, // varchar\r\n      turni: selectedTurn, // integer\r\n       id: storedid , \r\n      name: storedname\r\n    };\r\n    \r\n    fetch(\"http://localhost:8080/game/add\", {\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': \"application/json\" },\r\n      body: JSON.stringify(gameData)\r\n    })\r\n    \r\n    //.then(response => response.json())\r\n    .then(data => {\r\n      console.log('Game data sent to server:', data);\r\n      navigate('/about');\r\n    })\r\n    .catch(error => {\r\n      console.error('Error sending game data:', error);\r\n      console.log('json', gameData);\r\n    });\r\n  };\r\n  const [classList, setClassList] = useState([]);\r\n  \r\n    \r\n  \r\n  useEffect(() => {\r\n    fetch('http://localhost:8090/classut_repo/viewAll')\r\n      .then(response => response.text())\r\n      .then(str => new window.DOMParser().parseFromString(str, \"text/xml\"))\r\n      .then(data => {\r\n        console.log(\"wewe\",data);\r\n        const items = data.getElementsByTagName(\"item\");\r\n        const newClassList = Array.from(items).map(item => {\r\n          const name = item.getAttribute(\"name\");\r\n          return { name: name, icon: faCube };\r\n        }).filter(classItem => {\r\n          return classItem.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n        });\r\n\r\n        setClassList(newClassList);\r\n      });\r\n  }, [searchTerm]);\r\n\r\n  /*\r\n  //const [searchTerm, setSearchTerm] = useState('');\r\n  const classList = [\r\n    \r\n    { name: 'Classe 1', icon: faCube },\r\n    { name: 'Classe 2', icon: faCube },\r\n    { name: 'Classe 3', icon: faCube }\r\n  ].filter((classItem) => {\r\n    return classItem.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n  });*/\r\n\r\n  const robotList = [\r\n    { name: 'Randoop', icon: faRobot },\r\n    { name: 'Evosuite', icon: faRobot }\r\n  ];\r\n\r\n  if (!email) {\r\n    return (\r\n      <div>Accesso proibito. Esegui il login per accedere a questa pagina.</div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#\">Scelta configurazione</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ms-auto\">\r\n              <Nav.Item style={{ display: 'flex', alignItems: 'center',marginRight: '-4.5rem' }}>\r\n              <Dropdown>\r\n              <Dropdown.Toggle variant=\"light\" id=\"dropdown-basic\" style={{ background: 'none', border: 'none', padding: '0', color: 'black' }}>\r\n                <FontAwesomeIcon icon={faUser} style={{ marginRight: '0.3rem', color:'black' }} />\r\n                {email}\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item style={{ color: 'black' }} href=\"#/action-1\">Profilo</Dropdown.Item>\r\n                <Dropdown.Item style={{ color: 'black' }} href=\"#/action-2\">Impostazioni</Dropdown.Item>\r\n                <Dropdown.Divider />\r\n                \r\n                <Dropdown.Item style={{ color: 'black' }} onClick={handleLogout}>Esci</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n                \r\n              </Nav.Item>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <Container className=\"mt-4\">\r\n        <Row>\r\n          <Col md={3}>\r\n            <h4>Classi disponibili</h4>\r\n            <Form className=\"d-flex\">\r\n              <Form.Control type=\"text\" placeholder=\"Cerca classe\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)} />\r\n            </Form>\r\n            <ListGroup style={{ height: '400px', overflowY: 'auto', marginTop: '1rem' }}>\r\n              {classList.map((classItem) => (\r\n                <ListGroup.Item\r\n                  key={classItem.name}\r\n                  action\r\n                  active={selectedClass === classItem.name}\r\n                  onClick={() => handleClassSelect(classItem.name)}\r\n                  className=\"d-flex align-items-center\"\r\n                  style={{ paddingRight: '0.5rem' }}\r\n                >\r\n                  {selectedClass === classItem.name ? (\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                      <FontAwesomeIcon icon={faCheck} style={{ color: 'blue', marginRight: '0.5rem' }} />\r\n                      <span style={{ marginLeft: '0.5rem' }}>{classItem.name}</span>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <FontAwesomeIcon icon={classItem.icon} style={{ marginRight: '0.5rem' }} />\r\n                      <span style={{ marginLeft: '0.5rem' }}>{classItem.name}</span>\r\n                    </>\r\n                  )}\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={6}></Col>\r\n          <Col md={3}>\r\n            <h4>Robot disponibili</h4>\r\n            <ListGroup style={{ height: '400px', overflowY: 'auto', maxWidth: '400px' }} ref={robotListRef}>\r\n              {robotList.map((robot) => (\r\n                <ListGroup.Item\r\n                  key={robot.name}\r\n                  action\r\n                  active={selectedRobot === robot.name}\r\n                  onClick={() => handleRobotSelect(robot.name)}\r\n                  className={`d-flex align-items-center ${selectedRobot === robot.name ? 'robot-selected' : ''}`}\r\n                  data-robot-name={robot.name}\r\n                  style={{ paddingRight: '0.5rem' }}\r\n                >\r\n                  {selectedRobot === robot.name ? (\r\n                    <div style={{ display: 'flex', alignItems: 'center' }}>\r\n                      <FontAwesomeIcon icon={faCheck} style={{ color: 'blue', marginRight: '0.5rem' }} />\r\n                      <span style={{ marginLeft: '0.5rem' }}>{robot.name}</span>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <FontAwesomeIcon icon={robot.icon} style={{ marginRight: '0.5rem' }} />\r\n                      <span style={{ marginLeft: '0.5rem' }}>{robot.name}</span>\r\n                    </>\r\n                  )}\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      <div className=\"navigation\">\r\n        <Button variant=\"link\" href=\"/mod\" className=\"navigation-button\">\r\n          <FontAwesomeIcon icon={faArrowLeft} style={{ color: 'black' }} />\r\n        </Button>\r\n        <Button variant=\"primary\" size=\"md\" className=\"confirm-button\" onClick={handleConfirm}>\r\n          Conferma selezione\r\n        </Button>\r\n        <Button variant=\"link\" href=\"/about\" className=\"navigation-button\">\r\n          <FontAwesomeIcon icon={faArrowRight} style={{ color: 'black' }} />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\n\r\nimport './signup.css'; \r\n\r\nfunction Signup() {\r\n  const navigate = useNavigate();\r\n\r\n  const [values, setValues] = useState({\r\n    name: '',\r\n    surname: '',\r\n    email: '',\r\n    password: '',\r\n    courseofstudy:''\r\n  });\r\n\r\n  const handleInput = (event) => {\r\n    setValues(prev => ({...prev, [event.target.name]: event.target.value}))\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const playerData = {\r\n      name: values.name,\r\n      surname: values.surname,\r\n      email: values.email,\r\n      password: values.password,\r\n      courseofstudy: values.courseofstudy\r\n    };\r\n\r\n    \r\n\r\n    fetch(\"http://localhost:8080/player/add\", {\r\n      method: \"POST\",\r\n      headers: { 'Content-Type': \"application/json\" },\r\n      body: JSON.stringify(playerData)\r\n    })\r\n    //.then(response => response.json())\r\n    \r\n    .then(response => response.text())\r\n    .then(data => {\r\n      if (data === 'Email già presente') {\r\n        // If the email already exists, show an error message to the user\r\n        alert('Email già presente. Si prega di utilizzare altra email.');\r\n      }\r\n        else\r\n{      console.log('Player data sent to server:', data);\r\n      // Reindirizza l'utente alla pagina di login dopo la registrazione\r\n      navigate('/');}\r\n    })\r\n    .catch(error => {\r\n      console.error('Error sending player data:', error);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <section className=\"vh-100\" style={{ backgroundColor: '#eee' }}>\r\n      <Container className=\"h-100\">\r\n        <div className=\"row d-flex justify-content-center align-items-center h-100\">\r\n          <div className=\"col-lg-12 col-xl-11\">\r\n            <div className=\"card text-black\" style={{ borderRadius: '25px' }}>\r\n              <div className=\"card-body p-md-5\">\r\n                <div className=\"row justify-content-center\">\r\n                  <div className=\"col-md-10 col-lg-6 col-xl-5 order-2 order-lg-1\">\r\n\r\n                    <p className=\"text-center h1 fw-bold mb-5 mx-1 mx-md-4 mt-4\">Sign up</p>\r\n\r\n                    <Form onSubmit={handleSubmit} className=\"mx-1 mx-md-4\">\r\n\r\n                      <div className=\"form-floating mb-4\">\r\n                        <input type=\"text\" id=\"name\" className=\"form-control\" name=\"name\" value={values.name} onChange={handleInput} required />\r\n                        <label className=\"form-label\" htmlFor=\"name\">Name</label>\r\n                      </div>\r\n\r\n                      <div className=\"form-floating mb-4\">\r\n                        <input type=\"text\" id=\"surname\" className=\"form-control\" name=\"surname\" value={values.surname} onChange={handleInput} required />\r\n                        <label className=\"form-label\" htmlFor=\"surname\">Surname</label>\r\n                      </div>\r\n\r\n                      <div className=\"form-floating mb-4\">\r\n                        <input type=\"email\" id=\"email\" className=\"form-control\" name=\"email\" value={values.email} onChange={handleInput} required />\r\n                        <label className=\"form-label\" htmlFor=\"email\">Email</label>\r\n                      </div>\r\n\r\n                      <div className=\"form-floating mb-4\">\r\n                        <input type=\"password\" id=\"password\" className=\"form-control\" name=\"password\" value={values.password} onChange={handleInput} required />\r\n                        <label className=\"form-label\" htmlFor=\"password\">Password</label>\r\n                      </div>\r\n\r\n                      <div className=\"form-floating mb-4\">\r\n                        <select id=\"courseofstudy\" className=\"form-select\" name=\"courseofstudy\" value={values.courseofstudy} onChange={handleInput} required>\r\n                        <option value=\"\">Seleziona un corso di studi</option>\r\n                        <option value=\"triennale\">Triennale</option>\r\n                        <option value=\"magistrale\">Magistrale</option>\r\n                        <option value=\"altro\">Altro</option>\r\n                        </select>\r\n                         <label className=\"form-label\" htmlFor=\"courseofstudy\">Course of study</label>\r\n                      </div>\r\n\r\n                      <div className=\"form-check d-flex justify-content-center mb-5\">\r\n                        <input className=\"form-check-input me-2\" type=\"checkbox\" value=\"\" id=\"form2Example3c\" required />\r\n                        <label className=\"form-check-label\" htmlFor=\"form2Example3\">\r\n                          I agree all statements in <a href=\"#!\">Terms of service</a>\r\n                        </label>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex justify-content-center mx-4 mb-3 mb-lg-4\">\r\n                        <Button type=\"submit\" className=\"btn btn-primary btn-lg\">Register</Button>\r\n                      </div>\r\n\r\n                    </Form>\r\n\r\n                  </div>\r\n                  <div className=\"col-md-10 col-lg-6 col-xl-7 d-flex align-items-center order-1 order-lg-2\">\r\n\r\n                  <img src=\"https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-registration/draw1.webp\"\r\n                      className=\"img-fluid\" alt=\"Sample image\" />\r\n\r\n\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Signup;","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction CheckAcceptedPage() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [message, setMessage] = useState('');\r\n  const [dotIndex, setDotIndex] = useState(0);\r\n  const [accepted, setAccepted] = useState(false); // stato di accettazione dell'invito\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      const inviteId = localStorage.getItem('invtoId');\r\n      if (!inviteId) {\r\n        setMessage('ID invito non trovato nel localStorage');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n  \r\n      fetch(`http://localhost:8080/invitations/checkAccepted/${inviteId}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          setMessage(data.message);\r\n          setLoading(false);\r\n          if (data.message === `Invitation with ID ${inviteId} has been accepted`) {\r\n            setAccepted(true);\r\n          }\r\n        })\r\n        .catch(error => {\r\n          console.error('Errore durante la chiamata API:', error);\r\n          setMessage('Errore durante la chiamata API');\r\n          setLoading(false);\r\n        });\r\n    }, 3000); // Richiama l'API ogni 3 secondi\r\n  \r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (accepted) {\r\n      navigate('/about');\r\n    }\r\n  }, [accepted, navigate]);\r\n\r\n  useEffect(() => {\r\n    const dotIntervalId = setInterval(() => {\r\n      setDotIndex(dotIndex => (dotIndex + 1) % 4);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(dotIntervalId);\r\n  }, []);\r\n\r\n  const dotSize = 40;\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"loading-container\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n          {[0, 1, 2, 3].map(index => (\r\n            <span key={index} style={{ marginRight: 5, fontSize: dotSize, color: '#ccc' }}>\r\n              {index === dotIndex ? <span style={{ color: 'black', fontSize: '100px' }}>.</span> : ''}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (message !== 'Invitation not found' && message !== `Invitation with ID ${localStorage.getItem('invtoId')} has been accepted`) {\r\n    return (\r\n      <div className=\"loading-container\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n          {[0, 1, 2, 3].map(index => (\r\n        <span key={index} style={{ marginRight: 5, fontSize: dotSize, color: '#ccc' }}>\r\n        {index === dotIndex ? <span style={{ color: 'black', fontSize: '100px' }}>.</span> : ''}\r\n      </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport default CheckAcceptedPage;","import React, { useState,useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction PasswordResetForm( ) {\r\n  const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const token = new URLSearchParams(location.search).get('token');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n  \r\n    // Aggiungi questo controllo per verificare se il token è stato ricevuto correttamente\r\n    useEffect(() => {\r\n      if (!token) {\r\n        setErrorMessage('Invalid token');\r\n      }\r\n    }, [token]);\r\n  \r\n    const handlePasswordChange = (event) => {\r\n      setPassword(event.target.value);\r\n    };\r\n  \r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n  \r\n      // Aggiungi questo controllo per verificare se la password inserita dall'utente è valida\r\n      if (password.length < 8) {\r\n        setErrorMessage('Password must be at least 8 characters long');\r\n        return;\r\n      }\r\n  \r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ token: token, password: password }),\r\n      };\r\n  \r\n      fetch('http://localhost:8080/preset/reset', requestOptions)\r\n        .then((response) => response.text())\r\n          .then((data) => {\r\n            if (data === 'password-reset-error') {\r\n              \r\n              setErrorMessage('Token non valido');\r\n            }\r\n            else{\r\n          setSuccessMessage('Password reset successful');\r\n          setErrorMessage('');\r\n          navigate('/');\r\n            }\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(error.message);\r\n          setSuccessMessage('');\r\n        });\r\n    };\r\n    return (\r\n        <Container className=\"d-flex flex-column justify-content-center align-items-center min-vh-100\">\r\n          <Row className=\"justify-content-center\">\r\n            <Col md={6}>\r\n           \r\n             \r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId=\"formPassword\">\r\n                  <Form.Label>New Password</Form.Label>\r\n                  <Form.Control type=\"password\" value={password} onChange={handlePasswordChange} style={{ width: '215%' }} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" type=\"submit\" className=\"mt-3\">\r\n                  Reset Password\r\n                </Button>\r\n              </Form>\r\n              {errorMessage && <div className=\"text-danger mt-3\">{errorMessage}</div>}\r\n              {successMessage && <div className=\"text-success mt-3\">{successMessage}</div>}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n    \r\n    export default PasswordResetForm;","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\nfunction PasswordResetForm() {\r\n  const [email, setEmail] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleEmailChange = (event) => {\r\n    setEmail(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    axios\r\n      .post('http://localhost:8080/preset/request', { email: email })\r\n      .then((response) => {\r\n        if(response.data===\"Not Found\"){\r\n          alert('Non esiste un account con questa email');\r\n        }\r\n     else{\r\n        setSuccessMessage('Password reset link sent to your email');\r\n        setError('');\r\n     }\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n        if (error.response && error.response.status === 404 && error.response.data === \"Not Found\") {\r\n          setError('L\\'indirizzo email non esiste.');\r\n     \r\n        } else {\r\n          setError('Si è verificato un errore durante la richiesta di ripristino password.');\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex flex-column align-items-center mt-5\">\r\n \r\n      <div className=\"w-30\">\r\n      <h1>Password Reset</h1>\r\n      {successMessage && <p className=\"text-success\">{successMessage}</p>}\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control type=\"email\" placeholder=\"Enter email\" size=\"md\" value={email} onChange={handleEmailChange} />\r\n        </Form.Group>\r\n        <Button variant=\"primary\" type=\"submit\"  className=\"mt-3\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordResetForm;","import React from 'react';\r\n\r\n\r\nfunction OtherApp() {\r\n    return (\r\n      <iframe \r\n        src=\"http://localhost:3005\" \r\n        title=\"Editor\" \r\n        style={{ \r\n          border: 'none', \r\n          height: '100vh', \r\n          width: '100vw' \r\n        }} \r\n        allowFullScreen \r\n      />\r\n    );\r\n  }\r\nexport default OtherApp;","import \"./pages/App.css\";\r\nimport React from 'react'\r\nimport  { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Barra from \"./pages/Barra\";\r\nimport Modalita from \"./pages/Modalita\";\r\nimport Prova from \"./LoginREC/Login\";\r\nimport Single from \"./pages/Single\";\r\nimport Sign  from \"./LoginREC/Registrazione\";\r\nimport Prima from \"./Attesa/Attesa\";\r\nimport PasswordResetForm from \"./LoginREC/ResetPass\";\r\nimport PasswordResetReq from \"./LoginREC/PasswordResetLink\";\r\nimport OtherApp from \"./Editor/Editor\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Routes>\r\n          \r\n          <Route path=\"/about\" element={<Barra />} />\r\n          <Route path=\"/mod\" element={<Modalita />} />\r\n          <Route path=\"/Signup\" element={<Sign />} />\r\n          <Route path=\"/Multi\" element={<Home />} />\r\n          <Route path=\"/Single\" element={<Single />} />\r\n          <Route path=\"/\" element={<Prova />} />\r\n          <Route path=\"/casa\" element={<Prima />} />\r\n          <Route path=\"/elem\" element={<PasswordResetForm />} />\r\n          <Route path=\"/via\" element={<PasswordResetReq />} />\r\n          <Route path=\"/password-reset/reset\" element={<PasswordResetForm />} />\r\n          \r\n          <Route path=\"/about2\" element={<OtherApp />} />\r\n        </Routes>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css'\n\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}